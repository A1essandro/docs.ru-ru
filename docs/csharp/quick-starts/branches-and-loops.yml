### YamlMime:YamlDocument
documentType: Tutorial
title: "<span data-ttu-id=\"0aff6-101\">Ветви и циклы</span><span class=\"sxs-lookup\"><span data-stu-id=\"0aff6-101\">Branches and loops</span></span>"
metadata:
  title: "Ветви и циклы"
  description: "В этом кратком руководстве по ветвям и циклам для интерактивного изучения языка C# используется браузер. Вы напишете код C# и сможете просмотреть результаты его компиляции и выполнения непосредственно в браузере."
  audience: Developer
  level: Beginner
  ms.custom: mvc
  displayType: two-column
  interactive: csharp
  nextTutorialHref: list-collection
  nextTutorialTitle: "<span data-ttu-id=\"0aff6-105\">Использование коллекций с применением C#</span><span class=\"sxs-lookup\"><span data-stu-id=\"0aff6-105\">Collections in C#</span></span>"
  ms.openlocfilehash: 93183a172fb5a94751c99c0f59f59af0b045ac09
  ms.sourcegitcommit: 401c4427a3ec0d1263543033b3084039278509dc
  ms.translationtype: HT
  ms.contentlocale: ru-RU
  ms.lasthandoff: 12/07/2017
items:
- durationInMinutes: 1
  content: "<span data-ttu-id=\"0aff6-106\">Из этого краткого руководства вы узнаете, как написать код, при помощи которого проверяются переменные и изменяется путь выполнения на основе этих переменных.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0aff6-106\">This quick start teaches you how to write code that examines variables and changes execution path based on those variables.</span></span> <span data-ttu-id=\"0aff6-107\">Вы напишете код C# в интерактивном режиме и сможете просмотреть результаты его компиляции и выполнения с помощью браузера.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0aff6-107\">You'll use your browser to write C# interactively and see the results of compiling and running your code.</span></span> <span data-ttu-id=\"0aff6-108\">Это краткое руководство содержит упражнения, в которых рассматриваются конструкции ветвления и циклов в C#.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0aff6-108\">This quick start contains a series of lessons that explore branching and looping constructs in C#.</span></span> <span data-ttu-id=\"0aff6-109\">В рамках этих занятий вы ознакомитесь с основами языка C#.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0aff6-109\">These lessons teach you the fundamentals of the C# language.</span></span>\n"
- title: "<span data-ttu-id=\"0aff6-110\">Принятие решений с помощью оператора if</span><span class=\"sxs-lookup\"><span data-stu-id=\"0aff6-110\">Make decisions using the if statement</span></span>"
  durationInMinutes: 4
  content: "<span data-ttu-id=\"0aff6-111\">Запустите приведенный ниже код в интерактивном окне.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0aff6-111\">Run the following code in the interactive window.</span></span> <span data-ttu-id=\"0aff6-112\">Для этого введите следующий блок кода в интерактивном окне и нажмите кнопку **Выполнить**:</span><span class=\"sxs-lookup\"><span data-stu-id=\"0aff6-112\">To do that, type the following code block in the interactive window and click the **Run** button:</span></span>\n\n```csharp\nint a = 5;\nint b = 6;\nif (a + b > 10)\n    Console.WriteLine(\"The answer is greater than 10.\");\n```\n\n<span data-ttu-id=\"0aff6-113\">Измените объявление `b`, чтобы сумма была меньше 10:</span><span class=\"sxs-lookup\"><span data-stu-id=\"0aff6-113\">Modify the declaration of `b` so that the sum is less than 10:</span></span> \n\n```csharp\nint b = 3;\n```\n\n<span data-ttu-id=\"0aff6-114\">Нажмите кнопку **Выполнить** еще раз.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0aff6-114\">Click the **Run** button again.</span></span> <span data-ttu-id=\"0aff6-115\">Так как ответ меньше 10, никакие данные не выводятся.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0aff6-115\">Because the answer is less than 10, nothing is printed.</span></span> <span data-ttu-id=\"0aff6-116\">Проверяемое **условие** имеет значение false.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0aff6-116\">The **condition** you're testing is false.</span></span> <span data-ttu-id=\"0aff6-117\">У вас еще нет кода для выполнения, так как вы написали только одну из возможных ветвей для оператора `if` — ветвь true.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0aff6-117\">You don't have any code to execute because you've only written one of the possible branches for an `if` statement: the true branch.</span></span>\n\n> [!TIP]\n> <span data-ttu-id=\"0aff6-118\">Вероятнее всего, при изучении C# (как и любого другого языка программирования) вы будете допускать ошибки в коде.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0aff6-118\">As you explore C# (or any programming language), you'll make mistakes when you write code.</span></span> <span data-ttu-id=\"0aff6-119\">**Компилятор** найдет эти ошибки и сообщит вам о них.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0aff6-119\">The **compiler** will find those errors and report them to you.</span></span> <span data-ttu-id=\"0aff6-120\">Если результат содержит сообщения об ошибках, внимательно просмотрите пример кода и код в интерактивном окне, чтобы понять, что нужно исправить.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0aff6-120\">When the output contains error messages, look closely at the example code, and the code in the interactive window to see what to fix.</span></span>\n> <span data-ttu-id=\"0aff6-121\">Это упражнение поможет вам изучить структуру кода C#.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0aff6-121\">That exercise will help you learn the structure of C# code.</span></span>     \n\n<span data-ttu-id=\"0aff6-122\">В первом примере показаны возможности `if` и логические типы.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0aff6-122\">This first sample shows the power of `if` and boolean types.</span></span> <span data-ttu-id=\"0aff6-123\">*Логическое значение* — это переменная, которая может иметь одно из двух значений: `true` или `false`.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0aff6-123\">A *boolean* is a variable that can have one of two values: `true` or `false`.</span></span> <span data-ttu-id=\"0aff6-124\">Логические переменные в C# определяются особым типом — `bool`.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0aff6-124\">C# defines a special type, `bool` for boolean variables.</span></span> <span data-ttu-id=\"0aff6-125\">Оператор `if` проверяет значение `bool`.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0aff6-125\">The `if` statement checks the value of a `bool`.</span></span> <span data-ttu-id=\"0aff6-126\">Если значение `true`, выполняется оператор, следующий после `if`.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0aff6-126\">When the value is `true`, the statement following the `if` executes.</span></span> <span data-ttu-id=\"0aff6-127\">В противном случае он пропускается.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0aff6-127\">Otherwise, it is skipped.</span></span> \n\n<span data-ttu-id=\"0aff6-128\">Этот процесс проверки условий и выполнения операторов на основе этих условий предоставляет широкие возможности.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0aff6-128\">This process of checking conditions and executing statements based on those conditions is very powerful.</span></span> <span data-ttu-id=\"0aff6-129\">Давайте рассмотрим его подробнее.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0aff6-129\">Let's explore more.</span></span>\n\n> [!NOTE]\n> <span data-ttu-id=\"0aff6-130\">Этот онлайн-интерфейс для написания кода находится на этапе предварительной версии.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0aff6-130\">This online coding experience is in preview mode.</span></span> <span data-ttu-id=\"0aff6-131\">При возникновении проблем сообщите о них на странице [репозитория dotnet/try](https://github.com/dotnet/try/issues).</span><span class=\"sxs-lookup\"><span data-stu-id=\"0aff6-131\">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>\n"
- title: "<span data-ttu-id=\"0aff6-132\">Объединение операторов if и else</span><span class=\"sxs-lookup\"><span data-stu-id=\"0aff6-132\">Make if and else work together</span></span>"
  durationInMinutes: 10
  content: "\n<span data-ttu-id=\"0aff6-133\">Чтобы выполнить разный код в ветвях true и false, создайте ветвь `else`, которая будет выполняться, если условие имеет значение false.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0aff6-133\">To execute different code in both the true and false branches, you create an `else` branch that executes when the condition is false.</span></span> <span data-ttu-id=\"0aff6-134\">Попробуйте выполнить следующий код:</span><span class=\"sxs-lookup\"><span data-stu-id=\"0aff6-134\">Try this:</span></span>\n\n```csharp\nint a = 5;\nint b = 3;\nif (a + b > 10)\n    Console.WriteLine(\"The answer is greater than 10\");\nelse\n    Console.WriteLine(\"The answer is not greater than 10\");\n```\n\n<span data-ttu-id=\"0aff6-135\">Оператор после ключевого слова `else` выполняется, только если проверяемое условие имеет значение `false`.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0aff6-135\">The statement following the `else` keyword executes only when the condition being tested is `false`.</span></span> <span data-ttu-id=\"0aff6-136\">Объединив операторы `if` и `else` с логическими условиями, вы получите все необходимые возможности.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0aff6-136\">Combining `if` and `else` with boolean conditions provides all the power you need.</span></span>\n\n> [!IMPORTANT]\n> <span data-ttu-id=\"0aff6-137\">Отступы под операторами `if` и `else` предназначены только для удобства чтения.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0aff6-137\">The indentation under the `if` and `else` statements is for human readers.</span></span>\n> <span data-ttu-id=\"0aff6-138\">В языке C# не обязательно ставить отступы или пробелы.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0aff6-138\">The C# language doesn't treat indentation or whitespace as significant.</span></span> <span data-ttu-id=\"0aff6-139\">Операторы после ключевого слова `if` или `else` будут выполняться на основе условия.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0aff6-139\">The statement following the `if` or `else` keyword will be executed based on the condition.</span></span> <span data-ttu-id=\"0aff6-140\">В этом кратком руководстве все примеры кода содержат строки, разделенные отступами на основе потока управления операторами.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0aff6-140\">All the samples in this quick start follow a common practice to indent lines based on the control flow of statements.</span></span>\n\n<span data-ttu-id=\"0aff6-141\">Так как отступ не обязателен, используйте скобки `{` и `}`, если нужно указать несколько операторов в блоке кода, который выполняется в зависимости от условий.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0aff6-141\">Because indentation is not significant, you need to use `{` and `}` to indicate when you want more than one statement to be part of the block that executes conditionally.</span></span> <span data-ttu-id=\"0aff6-142\">Программисты C# обычно используют эти фигурные скобки во всех предложениях `if` и `else`.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0aff6-142\">C# programmers typically use those braces on all `if` and `else` clauses.</span></span> <span data-ttu-id=\"0aff6-143\">Следующий пример аналогичен только что созданному.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0aff6-143\">The following example is the same as what you just created.</span></span> <span data-ttu-id=\"0aff6-144\">Выполните его.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0aff6-144\">Try it.</span></span>\n\n```csharp\nint a = 5;\nint b = 3;\nif (a + b > 10)\n{\n    Console.WriteLine(\"The answer is greater than 10\");\n}\nelse\n{\n    Console.WriteLine(\"The answer is not greater than 10\");\n}\n```\n\n> [!TIP]\n> <span data-ttu-id=\"0aff6-145\">Все примеры кода в следующих разделах краткого руководства содержат фигурные скобки в соответствии с используемым соглашением.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0aff6-145\">Through the rest of this quick start, the code samples all include the braces, following accepted practices.</span></span>\n\n<span data-ttu-id=\"0aff6-146\">Можно проверить более сложные условия:</span><span class=\"sxs-lookup\"><span data-stu-id=\"0aff6-146\">You can test more complicated conditions:</span></span>\n\n```csharp\nint a = 5;\nint b = 3;\nint c = 4;\nif ((a + b + c > 10) && (a > b))\n{\n    Console.WriteLine(\"The answer is greater than 10\");\n    Console.WriteLine(\"And the first number is greater than the second\");\n}\nelse\n{\n    Console.WriteLine(\"The answer is not greater than 10\");\n    Console.WriteLine(\"Or the first number is not greater than the second\");\n}\n```\n\n<span data-ttu-id=\"0aff6-147\">`&&` представляет оператор and.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0aff6-147\">The `&&` represents \"and\".</span></span> <span data-ttu-id=\"0aff6-148\">То есть для выполнения оператора в ветви true оба условия должны иметь значение true.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0aff6-148\">It means both conditions must be true to execute the statement in the true branch.</span></span>  <span data-ttu-id=\"0aff6-149\">В этих примерах также показано, что в каждой условной ветви можно задать несколько операторов. Нужно лишь заключить их в скобки `{` и `}`.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0aff6-149\">These examples also show that you can have multiple statements in each conditional branch, provided you enclose them in `{` and `}`.</span></span>\n\n<span data-ttu-id=\"0aff6-150\">Вы также можете использовать оператор `||`, который представляет оператор or.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0aff6-150\">You can also use  `||` to represent \"or\":</span></span>\n\n```csharp\nint a = 5;\nint b = 3;\nint c = 4;\nif ((a + b + c > 10) || (a > b))\n{\n    Console.WriteLine(\"The answer is greater than 10\");\n    Console.WriteLine(\"Or the first number is greater than the second\");\n}\nelse\n{\n    Console.WriteLine(\"The answer is not greater than 10\");\n    Console.WriteLine(\"And the first number is not greater than the second\");\n}\n```\n\n> [!NOTE]\n> <span data-ttu-id=\"0aff6-151\">Этот онлайн-интерфейс для написания кода находится на этапе предварительной версии.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0aff6-151\">This online coding experience is in preview mode.</span></span> <span data-ttu-id=\"0aff6-152\">При возникновении проблем сообщите о них на странице [репозитория dotnet/try](https://github.com/dotnet/try/issues).</span><span class=\"sxs-lookup\"><span data-stu-id=\"0aff6-152\">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>\n"
- title: "<span data-ttu-id=\"0aff6-153\">Использование циклов для повторения операций</span><span class=\"sxs-lookup\"><span data-stu-id=\"0aff6-153\">Use loops to repeat operations</span></span>"
  durationInMinutes: 6
  content: "<span data-ttu-id=\"0aff6-154\">Еще одной важной конструкцией для создания больших программ являются **циклы**.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0aff6-154\">Another important concept to create larger programs is **loops**.</span></span> <span data-ttu-id=\"0aff6-155\">Циклы используется для повторения операторов, которые должны выполняться несколько раз.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0aff6-155\">You'll use loops to repeat statements that you want executed more than once.</span></span> <span data-ttu-id=\"0aff6-156\">Выполните следующий код в интерактивном окне:</span><span class=\"sxs-lookup\"><span data-stu-id=\"0aff6-156\">Try this code in the interactive window:</span></span>\n\n```csharp\nint counter = 0;\nwhile (counter < 10)\n{\n  Console.WriteLine($\"Hello World! The counter is {counter}\");\n  counter++;\n}\n```\n\n<span data-ttu-id=\"0aff6-157\">Оператор `while` проверяет условие и выполняет инструкцию, следующую после `while`.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0aff6-157\">The `while` statement checks a condition and executes the statement following the `while`.</span></span> <span data-ttu-id=\"0aff6-158\">Проверка условия и выполнение этих операторов будут повторяться, пока условие не примет значение false.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0aff6-158\">It will repeat checking the condition and executing those statements until the condition is false.</span></span>\n\n<span data-ttu-id=\"0aff6-159\">В этом примере представлен еще один новый оператор.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0aff6-159\">There's one other new operator in this example.</span></span> <span data-ttu-id=\"0aff6-160\">Объект `++` после переменной `counter` представляет собой оператор **инкремента**.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0aff6-160\">The `++` after the `counter` variable is the **increment** operator.</span></span> <span data-ttu-id=\"0aff6-161\">Он добавляет 1 к значению счетчика и сохраняет это значение в переменной счетчика.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0aff6-161\">It adds 1 to the value of counter, and stores that value in the counter variable.</span></span>\n\n> [!IMPORTANT]\n> <span data-ttu-id=\"0aff6-162\">Напишите такой код, при выполнении которого значение условия цикла `while` изменится на false.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0aff6-162\">Make sure that the `while` loop condition does switch to false as you execute the code.</span></span> <span data-ttu-id=\"0aff6-163\">В противном случае будет создан **бесконечный цикл**, в котором выполнение программы никогда не закончится.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0aff6-163\">Otherwise, you create an **infinite loop** where your program never ends.</span></span> <span data-ttu-id=\"0aff6-164\">Мы не будем приводить пример, так как истечет время ожидания подсистемы, в которой выполняется код, и вы не увидите выходных данных из программы.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0aff6-164\">Let's not demonstrate that, because the engine that runs your code will time out and you'll see no output from your program.</span></span>\n\n<span data-ttu-id=\"0aff6-165\">В цикле `while` условие проверяется, прежде чем выполнить код, который следует после `while`.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0aff6-165\">The `while` loop tests the condition before executing the code following the `while`.</span></span> <span data-ttu-id=\"0aff6-166\">А в цикле `do` ... `while` сначала выполняется код, а потом проверяется условие.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0aff6-166\">The `do` ... `while` loop executes the code first, and then checks the condition.</span></span> <span data-ttu-id=\"0aff6-167\">Это выглядит следующим образом:</span><span class=\"sxs-lookup\"><span data-stu-id=\"0aff6-167\">It looks like this:</span></span>\n\n```csharp\nint counter = 0;\ndo\n{\n  Console.WriteLine($\"Hello World! The counter is {counter}\");\n  counter++;\n} while (counter < 10);\n```\n\n<span data-ttu-id=\"0aff6-168\">Этот цикл `do` и цикл `while`, приведенный выше, выполняются одинаково.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0aff6-168\">This `do` loop and the earlier `while` loop work the same.</span></span> \n\n<span data-ttu-id=\"0aff6-169\">Давайте перейдем к одному из последних операторов цикла.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0aff6-169\">Let's move on to one last loop statement.</span></span>\n\n> [!NOTE]\n> <span data-ttu-id=\"0aff6-170\">Этот онлайн-интерфейс для написания кода находится на этапе предварительной версии.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0aff6-170\">This online coding experience is in preview mode.</span></span> <span data-ttu-id=\"0aff6-171\">При возникновении проблем сообщите о них на странице [репозитория dotnet/try](https://github.com/dotnet/try/issues).</span><span class=\"sxs-lookup\"><span data-stu-id=\"0aff6-171\">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>\n"
- title: "<span data-ttu-id=\"0aff6-172\">Работа с циклом for</span><span class=\"sxs-lookup\"><span data-stu-id=\"0aff6-172\">Work with the for loop</span></span>"
  durationInMinutes: 5
  content: "<span data-ttu-id=\"0aff6-173\">Еще один стандартный оператор цикла, который можно увидеть в C#, — это цикл `for`.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0aff6-173\">Another common loop statement that you'll see in C# code is the `for` loop.</span></span> <span data-ttu-id=\"0aff6-174\">Выполните следующий код в интерактивном окне:</span><span class=\"sxs-lookup\"><span data-stu-id=\"0aff6-174\">Try this code in the interactive window:</span></span>\n\n```csharp\nfor(int counter = 0; counter < 10; counter++)\n{\n  Console.WriteLine($\"Hello World! The counter is {counter}\");\n} \n```\n\n<span data-ttu-id=\"0aff6-175\">Этот цикл работает так же, как циклы `while` и `do`, использованные ранее.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0aff6-175\">This does the same work as the `while` loop and the `do` loop you've already used.</span></span> <span data-ttu-id=\"0aff6-176\">Оператор `for` состоит из трех частей, которые отвечают за его работу.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0aff6-176\">The `for` statement has three parts that control how it works.</span></span> \n\n<span data-ttu-id=\"0aff6-177\">Первая часть — **для инициализатора**: `for counter = 0;` объявляет `counter` переменной цикла и задает для ее начальное значение `0`.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0aff6-177\">The first part is the **for initializer**: `for counter = 0;` declares that `counter` is the loop variable, and sets its initial value to `0`.</span></span>\n\n<span data-ttu-id=\"0aff6-178\">Средняя часть — **для условия**: `counter < 10` объявляет, что этот цикл `for` продолжает выполняться, пока значение счетчика меньше 10.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0aff6-178\">The middle part is the **for condition**: `counter < 10` declares that this `for` loop continues to execute as long as the value of counter is less than 10.</span></span>\n\n<span data-ttu-id=\"0aff6-179\">Последняя часть — **для итератора**: `counter++` определяет, как изменится переменная цикла после выполнения блока, следующего после оператора `for`.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0aff6-179\">The final part is the **for iterator**: `counter++` specifies how to modify the loop variable after executing the block following the `for` statement.</span></span> <span data-ttu-id=\"0aff6-180\">В нашем случае определяется, что значение `counter` должно увеличиваться на 1 каждый раз, когда выполняется блок.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0aff6-180\">Here, it specifies that `counter` should be incremented by 1 each time the block executes.</span></span>\n\n<span data-ttu-id=\"0aff6-181\">Попробуйте сделать это самостоятельно.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0aff6-181\">Experiment with these yourself.</span></span> <span data-ttu-id=\"0aff6-182\">Попытайтесь выполнить следующие задания:</span><span class=\"sxs-lookup\"><span data-stu-id=\"0aff6-182\">Try each of the following:</span></span>\n\n- <span data-ttu-id=\"0aff6-183\">Измените инициализатор, чтобы цикл начинался с другого значения.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0aff6-183\">Change the initializer to start at a different value.</span></span>\n- <span data-ttu-id=\"0aff6-184\">Измените условие, чтобы цикл заканчивался другим значением.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0aff6-184\">Change the condition to stop at a different value.</span></span>\n\n<span data-ttu-id=\"0aff6-185\">По окончании попробуйте самостоятельно написать код, чтобы применить полученные знания.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0aff6-185\">When you're done, let's move on to write some code yourself to use what you've learned.</span></span>\n\n> [!NOTE]\n> <span data-ttu-id=\"0aff6-186\">Этот онлайн-интерфейс для написания кода находится на этапе предварительной версии.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0aff6-186\">This online coding experience is in preview mode.</span></span> <span data-ttu-id=\"0aff6-187\">При возникновении проблем сообщите о них на странице [репозитория dotnet/try](https://github.com/dotnet/try/issues).</span><span class=\"sxs-lookup\"><span data-stu-id=\"0aff6-187\">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>\n"
- title: "<span data-ttu-id=\"0aff6-188\">Объединение ветвей и циклов</span><span class=\"sxs-lookup\"><span data-stu-id=\"0aff6-188\">Combine branches and loops</span></span>"
  durationInMinutes: 12
  content: "<span data-ttu-id=\"0aff6-189\">Теперь, когда вы ознакомились с оператором `if` и конструкциями цикла на языке C#, попытайтесь написать код C# для поиска суммы всех целых чисел от 1 до 20, которые делятся на 3.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0aff6-189\">Now that you've seen the `if` statement and the looping constructs in the C# language, see if you can write C# code to find the sum of all integers 1 through 20 that are divisible by 3.</span></span>  <span data-ttu-id=\"0aff6-190\">Вот несколько подсказок:</span><span class=\"sxs-lookup\"><span data-stu-id=\"0aff6-190\">Here are a few hints:</span></span>\n\n- <span data-ttu-id=\"0aff6-191\">оператор `%` позволяет получить остаток от операции деления;</span><span class=\"sxs-lookup\"><span data-stu-id=\"0aff6-191\">The `%` operator gives you the remainder of a division operation.</span></span>\n- <span data-ttu-id=\"0aff6-192\">оператор `if` предоставляет условие, которое позволяет определить, будет ли число учитываться в сумме;</span><span class=\"sxs-lookup\"><span data-stu-id=\"0aff6-192\">The `if` statement gives you the condition to see if a number should be part of the sum.</span></span>\n- <span data-ttu-id=\"0aff6-193\">цикл `for` позволяет повторить последовательность шагов для всех чисел от 1 до 20.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0aff6-193\">The `for` loop can help you repeat a series of steps for all the numbers 1 through 20.</span></span>\n\n<span data-ttu-id=\"0aff6-194\">Попробуйте самостоятельно.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0aff6-194\">Try it yourself.</span></span> <span data-ttu-id=\"0aff6-195\">Затем проверьте результат.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0aff6-195\">Then check how you did.</span></span>\n\n> [!NOTE]\n> <span data-ttu-id=\"0aff6-196\">Этот онлайн-интерфейс для написания кода находится на этапе предварительной версии.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0aff6-196\">This online coding experience is in preview mode.</span></span> <span data-ttu-id=\"0aff6-197\">При возникновении проблем сообщите о них на странице [репозитория dotnet/try](https://github.com/dotnet/try/issues).</span><span class=\"sxs-lookup\"><span data-stu-id=\"0aff6-197\">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>\n"
- title: "<span data-ttu-id=\"0aff6-198\">Выполнение задачи</span><span class=\"sxs-lookup\"><span data-stu-id=\"0aff6-198\">Complete challenge</span></span>"
  durationInMinutes: 1
  content: "<span data-ttu-id=\"0aff6-199\">Вы ознакомились с кратким руководством по ветвям и циклам.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0aff6-199\">You've completed the \"branches and loops\" quick start.</span></span> \n\n<span data-ttu-id=\"0aff6-200\">Можно продолжить работу с этими краткими руководствами в собственной среде разработки.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0aff6-200\">You can continue these quick starts on your own development environment.</span></span> <span data-ttu-id=\"0aff6-201\">В руководстве по [началу работы с .NET за 10 минут](https://www.microsoft.com/net/core), содержатся инструкции по настройке локальной среды разработки.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0aff6-201\">The .NET topic [Get Started in 10 minutes](https://www.microsoft.com/net/core) has instructions for setting up your local development environment.</span></span> <span data-ttu-id=\"0aff6-202\">После настройки выполните задачи из [краткого руководства по коллекции списков](arrays-and-collections.md) в локальной среде.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0aff6-202\">Once you've done that, continue with [List collection quickstart](arrays-and-collections.md) in your local environment.</span></span>\n\n<span data-ttu-id=\"0aff6-203\">Дополнительные сведения об этих понятиях см. в следующих разделах:</span><span class=\"sxs-lookup\"><span data-stu-id=\"0aff6-203\">You can learn more about these concepts in these topics:</span></span>\n\n<span data-ttu-id=\"0aff6-204\">[if-else (справочник по C#)](../language-reference/keywords/if-else.md) </span><span class=\"sxs-lookup\"><span data-stu-id=\"0aff6-204\">[If and else statement](../language-reference/keywords/if-else.md) </span></span>  \n<span data-ttu-id=\"0aff6-205\">[while (справочник по C#)](../language-reference/keywords/while.md) </span><span class=\"sxs-lookup\"><span data-stu-id=\"0aff6-205\">[While statement](../language-reference/keywords/while.md) </span></span>  \n<span data-ttu-id=\"0aff6-206\">[do (справочник по C#)](../language-reference/keywords/do.md) </span><span class=\"sxs-lookup\"><span data-stu-id=\"0aff6-206\">[Do statement](../language-reference/keywords/do.md) </span></span>  \n[<span data-ttu-id=\"0aff6-207\">for (справочник по C#)</span><span class=\"sxs-lookup\"><span data-stu-id=\"0aff6-207\">For statement</span></span>](../language-reference/keywords/for.md)\0"
