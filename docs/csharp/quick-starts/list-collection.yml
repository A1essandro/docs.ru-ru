### YamlMime:Tutorial
title: <span data-ttu-id="d4c8c-101">Использование коллекций с применением C#</span><span class="sxs-lookup"><span data-stu-id="d4c8c-101">Collections in C#</span></span>
metadata:
  title: Краткие руководства по C#. Интерактивное руководство по коллекциям
  description: В этом руководстве для интерактивного изучения C# используется браузер. Вы напишете код C# и сможете просмотреть результаты его компиляции и выполнения непосредственно в браузере.
  audience: Developer
  ms.topic: get-started-article
  ms.custom: mvc
  level: Beginner
  displayType: two-column
  interactive: csharp
  ms.prod: .net
  ms.technology: devlang-csharp
  ms.openlocfilehash: 08060fc95d94db91a429439e502a8f6dc2978c4d
  ms.sourcegitcommit: 935d5267c44f9bce801468ef95f44572f1417e8c
  ms.translationtype: HT
  ms.contentlocale: ru-RU
  ms.lasthandoff: 03/28/2018
items:
- durationInMinutes: 1
  content: >
    <span data-ttu-id="d4c8c-105">Это краткое руководство поможет в интерактивном изучении C#. Прямо в браузере вы напишете код C# и сможете просмотреть результаты его компиляции и выполнения.</span><span class="sxs-lookup"><span data-stu-id="d4c8c-105">This quickstart teaches you C# interactively, using your browser to write C# code and see the results of compiling and running your code.</span></span> <span data-ttu-id="d4c8c-106">Руководство содержит ряд задач по созданию, изменению и изучению коллекций и массивов.</span><span class="sxs-lookup"><span data-stu-id="d4c8c-106">It contains a series of lessons that create, modify and explore collections and arrays.</span></span>
- title: <span data-ttu-id="d4c8c-107">Создание списков</span><span class="sxs-lookup"><span data-stu-id="d4c8c-107">Create lists</span></span>
  durationInMinutes: 2
  content: >
    <span data-ttu-id="d4c8c-108">Запустите приведенный ниже код в интерактивном окне.</span><span class="sxs-lookup"><span data-stu-id="d4c8c-108">Run the following code in the interactive window.</span></span> <span data-ttu-id="d4c8c-109">Для этого введите следующий блок кода в интерактивном окне (замените "<name>" своим именем) и нажмите кнопку **Выполнить**:</span><span class="sxs-lookup"><span data-stu-id="d4c8c-109">To do that, type the following code block in the interactive window (replace "<name>" with your name) and click the **Run** button:</span></span>


    ```csharp

    var names = new List<string> { "<name>", "Ana", "Felipe" };

    foreach (var name in names)

    {
      Console.WriteLine($"Hello {name.ToUpper()}!");
    }

    ```


    <span data-ttu-id="d4c8c-110">Вы создали список строк, добавили в него три имени и вывели имена с преобразованием всех букв в прописные.</span><span class="sxs-lookup"><span data-stu-id="d4c8c-110">You've just created a list of strings, added three names to that list, and printed out the names in all CAPS.</span></span> <span data-ttu-id="d4c8c-111">Для циклического прохода по списку вы примените концепции, которые изучили в предыдущих кратких руководствах.</span><span class="sxs-lookup"><span data-stu-id="d4c8c-111">You're using concepts that you've learned in earlier quickstarts to loop through the list.</span></span>


    <span data-ttu-id="d4c8c-112">В коде для отображения имен используется функция [интерполяции строк](../language-reference/tokens/interpolated.md).</span><span class="sxs-lookup"><span data-stu-id="d4c8c-112">The code to display names makes use of the [string interpolation](../language-reference/tokens/interpolated.md) feature.</span></span> <span data-ttu-id="d4c8c-113">Если перед `string` добавить символ `$`, код C# можно внедрять в объявление строки.</span><span class="sxs-lookup"><span data-stu-id="d4c8c-113">When you precede a `string` with the `$` character, you can embed C# code in the string declaration.</span></span> <span data-ttu-id="d4c8c-114">Фактическая строка заменяет код C# генерируемым значением.</span><span class="sxs-lookup"><span data-stu-id="d4c8c-114">The actual string replaces that C# code with the value it generates.</span></span> <span data-ttu-id="d4c8c-115">В этом примере она заменяет `{name.ToUpper()}` именами, буквы каждого из которых преобразованы в прописные, так как вызван метод <xref:System.String.ToUpper%2A>.</span><span class="sxs-lookup"><span data-stu-id="d4c8c-115">In this example, it replaces the `{name.ToUpper()}` with each name, converted to capital letters, because you called the <xref:System.String.ToUpper%2A> method.</span></span>


    <span data-ttu-id="d4c8c-116">Продолжим изучение.</span><span class="sxs-lookup"><span data-stu-id="d4c8c-116">Let's keep exploring.</span></span>


    > [!NOTE]

    > <span data-ttu-id="d4c8c-117">Этот онлайн-интерфейс для написания кода находится на этапе предварительной версии.</span><span class="sxs-lookup"><span data-stu-id="d4c8c-117">This online coding experience is in preview mode.</span></span> <span data-ttu-id="d4c8c-118">При возникновении проблем сообщите о них на странице [репозитория dotnet/try](https://github.com/dotnet/try/issues).</span><span class="sxs-lookup"><span data-stu-id="d4c8c-118">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>
- title: <span data-ttu-id="d4c8c-119">Изменение содержимого списка</span><span class="sxs-lookup"><span data-stu-id="d4c8c-119">Modify list contents</span></span>
  durationInMinutes: 3
  content: >
    <span data-ttu-id="d4c8c-120">В созданной коллекции используется тип <xref:System.Collections.Generic.List%601>.</span><span class="sxs-lookup"><span data-stu-id="d4c8c-120">The collection you created uses the <xref:System.Collections.Generic.List%601> type.</span></span> <span data-ttu-id="d4c8c-121">При применении такого типа сохраняются последовательности элементов.</span><span class="sxs-lookup"><span data-stu-id="d4c8c-121">This type stores sequences of elements.</span></span> <span data-ttu-id="d4c8c-122">Тип элементов указывается в угловых скобках.</span><span class="sxs-lookup"><span data-stu-id="d4c8c-122">You specify the type of the elements between the angle brackets.</span></span>


    <span data-ttu-id="d4c8c-123">Важный аспект типа <xref:System.Collections.Generic.List%601> — возможность увеличения или уменьшения, что позволяет добавлять или удалять элементы.</span><span class="sxs-lookup"><span data-stu-id="d4c8c-123">One important aspect of this <xref:System.Collections.Generic.List%601> type is that it can grow or shrink, enabling you to add or remove elements.</span></span> <span data-ttu-id="d4c8c-124">Добавьте следующий фрагмент после написанного кода:</span><span class="sxs-lookup"><span data-stu-id="d4c8c-124">Add the following code below the code you've already written:</span></span>


    ```csharp

    Console.WriteLine();

    names.Add("Maria");

    names.Add("Bill");

    names.Remove("Ana");

    foreach (var name in names)

    {
      Console.WriteLine($"Hello {name.ToUpper()}!");
    }

    ```


    <span data-ttu-id="d4c8c-125">В конец списка добавлены еще два имени.</span><span class="sxs-lookup"><span data-stu-id="d4c8c-125">You've added two more names to the end of the list.</span></span> <span data-ttu-id="d4c8c-126">При этом одно имя удалено.</span><span class="sxs-lookup"><span data-stu-id="d4c8c-126">You've also removed one as well.</span></span>


    <span data-ttu-id="d4c8c-127"><xref:System.Collections.Generic.List%601> позволяет добавлять ссылки на отдельные элементы по **индексу**.</span><span class="sxs-lookup"><span data-stu-id="d4c8c-127">The <xref:System.Collections.Generic.List%601> enables you to reference individual items by **index** as well.</span></span> <span data-ttu-id="d4c8c-128">Доступ к элементам осуществляется при помощи токенов `[` и `]`.</span><span class="sxs-lookup"><span data-stu-id="d4c8c-128">You access items using the `[` and `]` tokens.</span></span> <span data-ttu-id="d4c8c-129">Добавьте следующий фрагмент после написанного кода и протестируйте результат:</span><span class="sxs-lookup"><span data-stu-id="d4c8c-129">Add the following code below what you've already written and try it:</span></span>


    ```csharp

    Console.WriteLine($"My name is {names[0]}.");

    Console.WriteLine($"I've added {names[2]} and {names[3]} to the list.");

    ```


    <span data-ttu-id="d4c8c-130">Доступ за пределами списка не предоставляется.</span><span class="sxs-lookup"><span data-stu-id="d4c8c-130">You're not allowed to access past the end of the list.</span></span> <span data-ttu-id="d4c8c-131">Вы можете проверить, как долго в списке используется свойство <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="d4c8c-131">You can check how long the list is using the <xref:System.Collections.Generic.List%601.Count%2A> property.</span></span> <span data-ttu-id="d4c8c-132">Добавьте следующий код, чтобы протестировать его:</span><span class="sxs-lookup"><span data-stu-id="d4c8c-132">Add the following code to try it:</span></span>


    ```csharp

    Console.WriteLine($"The list has {names.Count} people in it");

    ```


    <span data-ttu-id="d4c8c-133">Еще раз нажмите кнопку **Выполнить**, чтобы просмотреть результаты.</span><span class="sxs-lookup"><span data-stu-id="d4c8c-133">Click **Run** again to see the results.</span></span> <span data-ttu-id="d4c8c-134">В C# индексы начинаются с 0, поэтому максимальный допустимый индекс меньше, чем число элементов в списке.</span><span class="sxs-lookup"><span data-stu-id="d4c8c-134">In C#, indices start at 0, so the largest valid index is one less than the number of items in the list.</span></span>


    > [!NOTE]

    > <span data-ttu-id="d4c8c-135">Этот онлайн-интерфейс для написания кода находится на этапе предварительной версии.</span><span class="sxs-lookup"><span data-stu-id="d4c8c-135">This online coding experience is in preview mode.</span></span> <span data-ttu-id="d4c8c-136">При возникновении проблем сообщите о них на странице [репозитория dotnet/try](https://github.com/dotnet/try/issues).</span><span class="sxs-lookup"><span data-stu-id="d4c8c-136">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>
- title: <span data-ttu-id="d4c8c-137">Поиск по спискам и их сортировка</span><span class="sxs-lookup"><span data-stu-id="d4c8c-137">Search and sort lists</span></span>
  durationInMinutes: 5
  content: >
    <span data-ttu-id="d4c8c-138">В наших примерах используются сравнительно небольшие списки. Но приложения часто создают списки с гораздо большим количеством элементов, иногда они исчисляются в тысячах.</span><span class="sxs-lookup"><span data-stu-id="d4c8c-138">Our samples use relatively small lists, but your applications may often create lists with many more elements, sometimes numbering in the thousands.</span></span> <span data-ttu-id="d4c8c-139">Чтобы найти элементы в таких больших коллекциях, необходимо выполнить поиск различных элементов по списку.</span><span class="sxs-lookup"><span data-stu-id="d4c8c-139">To find elements in these larger collections, you need to search the list for different items.</span></span> <span data-ttu-id="d4c8c-140">Метод <xref:System.Collections.Generic.List%601.IndexOf%2A> выполняет поиск элемента и возвращает его индекс.</span><span class="sxs-lookup"><span data-stu-id="d4c8c-140">The <xref:System.Collections.Generic.List%601.IndexOf%2A> method searches for an item and returns the index of the item.</span></span> <span data-ttu-id="d4c8c-141">Протестируйте его, чтобы узнать, как он работает.</span><span class="sxs-lookup"><span data-stu-id="d4c8c-141">Try this to see how it works.</span></span>  <span data-ttu-id="d4c8c-142">Добавьте следующий фрагмент после написанного кода:</span><span class="sxs-lookup"><span data-stu-id="d4c8c-142">Add the following code below what you've written so far:</span></span>


    ```csharp

    var index = names.IndexOf("Felipe");

    if (index != -1)
      Console.WriteLine($"The name {names[index]} is at index {index}");

    var notFound = names.IndexOf("Not Found");
      Console.WriteLine($"When an item is not found, IndexOf returns {notFound}");
    ```


    <span data-ttu-id="d4c8c-143">Мы не всегда можем знать, присутствует ли элемент в списке, поэтому нужно обязательно проверять индекс, возвращенный <xref:System.Collections.Generic.List%601.IndexOf%2A>.</span><span class="sxs-lookup"><span data-stu-id="d4c8c-143">You may not know if an item is in the list, so you should always check the index returned by <xref:System.Collections.Generic.List%601.IndexOf%2A>.</span></span> <span data-ttu-id="d4c8c-144">Если он имеет значение 1, элемент не найден.</span><span class="sxs-lookup"><span data-stu-id="d4c8c-144">If it is -1, the item was not found.</span></span>


    <span data-ttu-id="d4c8c-145">Кроме того, можно сортировать элементы в списке.</span><span class="sxs-lookup"><span data-stu-id="d4c8c-145">The items in your list can be sorted as well.</span></span> <span data-ttu-id="d4c8c-146">Метод <xref:System.Collections.Generic.List%601.Sort%2A> сортирует все элементы списка в обычном порядке (при использовании строк — в алфавитном порядке).</span><span class="sxs-lookup"><span data-stu-id="d4c8c-146">The <xref:System.Collections.Generic.List%601.Sort%2A> method sorts all the items in the list in their normal order (alphabetically in the case of strings).</span></span> <span data-ttu-id="d4c8c-147">Добавьте следующий фрагмент и снова выполните код:</span><span class="sxs-lookup"><span data-stu-id="d4c8c-147">Add this code and run again:</span></span>


    ```csharp

    names.Sort();

    foreach (var name in names)

    {
      Console.WriteLine($"Hello {name.ToUpper()}!");
    }

    ```


    > [!NOTE]

    > <span data-ttu-id="d4c8c-148">Этот онлайн-интерфейс для написания кода находится на этапе предварительной версии.</span><span class="sxs-lookup"><span data-stu-id="d4c8c-148">This online coding experience is in preview mode.</span></span> <span data-ttu-id="d4c8c-149">При возникновении проблем сообщите о них на странице [репозитория dotnet/try](https://github.com/dotnet/try/issues).</span><span class="sxs-lookup"><span data-stu-id="d4c8c-149">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>
- title: <span data-ttu-id="d4c8c-150">Списки других типов</span><span class="sxs-lookup"><span data-stu-id="d4c8c-150">Lists of other types</span></span>
  durationInMinutes: 5
  content: >
    <span data-ttu-id="d4c8c-151">Вы уже использовали в списках тип `string`.</span><span class="sxs-lookup"><span data-stu-id="d4c8c-151">You've been using the `string` type in lists so far.</span></span> <span data-ttu-id="d4c8c-152">Создадим <xref:System.Collections.Generic.List%601> с использованием другого типа.</span><span class="sxs-lookup"><span data-stu-id="d4c8c-152">Let's make a <xref:System.Collections.Generic.List%601> using a different type.</span></span> <span data-ttu-id="d4c8c-153">Сначала создадим набор чисел.</span><span class="sxs-lookup"><span data-stu-id="d4c8c-153">Let's build a set of numbers.</span></span> <span data-ttu-id="d4c8c-154">Удалите написанный код, заменив его следующим:</span><span class="sxs-lookup"><span data-stu-id="d4c8c-154">Delete the code you wrote so far, and replace it with this:</span></span>


    ```csharp

    var fibonacciNumbers = new List<int> {1, 1};

    ```


    <span data-ttu-id="d4c8c-155">Будет создан список целых чисел. Для первых двух целых чисел будет задано значение 1.</span><span class="sxs-lookup"><span data-stu-id="d4c8c-155">That creates a list of integers, and sets the first two integers to the value 1.</span></span> <span data-ttu-id="d4c8c-156">Это два первых значения *последовательности Фибоначчи*.</span><span class="sxs-lookup"><span data-stu-id="d4c8c-156">These are the first two values of a *Fibonacci Sequence*, a sequence of numbers.</span></span> <span data-ttu-id="d4c8c-157">Каждое следующее число Фибоначчи — это сумма двух предыдущих чисел.</span><span class="sxs-lookup"><span data-stu-id="d4c8c-157">Each next Fibonacci number is found by taking the sum of the previous two numbers.</span></span> <span data-ttu-id="d4c8c-158">Добавьте этот код:</span><span class="sxs-lookup"><span data-stu-id="d4c8c-158">Add this code:</span></span>


    ```csharp

    var previous = fibonacciNumbers[fibonacciNumbers.Count - 1];

    var previous2 = fibonacciNumbers[fibonacciNumbers.Count - 2];


    fibonacciNumbers.Add(previous + previous2);


    foreach(var item in fibonacciNumbers)
        Console.WriteLine(item);
    ```


    <span data-ttu-id="d4c8c-159">Нажмите кнопку **Выполнить**, чтобы просмотреть результаты.</span><span class="sxs-lookup"><span data-stu-id="d4c8c-159">Press **Run** to see the results;</span></span>


    > [!NOTE]

    > <span data-ttu-id="d4c8c-160">Этот онлайн-интерфейс для написания кода находится на этапе предварительной версии.</span><span class="sxs-lookup"><span data-stu-id="d4c8c-160">This online coding experience is in preview mode.</span></span> <span data-ttu-id="d4c8c-161">При возникновении проблем сообщите о них на странице [репозитория dotnet/try](https://github.com/dotnet/try/issues).</span><span class="sxs-lookup"><span data-stu-id="d4c8c-161">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>
- title: <span data-ttu-id="d4c8c-162">Задача</span><span class="sxs-lookup"><span data-stu-id="d4c8c-162">Challenge</span></span>
  durationInMinutes: 10
  content: >
    <span data-ttu-id="d4c8c-163">Попробуйте объединить некоторые идеи из этого и предыдущих занятий.</span><span class="sxs-lookup"><span data-stu-id="d4c8c-163">See if you can put together some of the concepts from this and earlier lessons.</span></span> <span data-ttu-id="d4c8c-164">Расширьте код с числами Фибоначчи, который вы создали.</span><span class="sxs-lookup"><span data-stu-id="d4c8c-164">Expand on what you've built so far with Fibonacci Numbers.</span></span> <span data-ttu-id="d4c8c-165">Напишите и протестируйте код для создания первых 20 чисел в последовательности.</span><span class="sxs-lookup"><span data-stu-id="d4c8c-165">Try and write the code to generate the first 20 numbers in the sequence.</span></span> <span data-ttu-id="d4c8c-166">Подсказка: 20-е число Фибоначчи — 6765.</span><span class="sxs-lookup"><span data-stu-id="d4c8c-166">(As a hint, the 20th Fibonacci number is 6765.)</span></span>


    > [!NOTE]

    > <span data-ttu-id="d4c8c-167">Этот онлайн-интерфейс для написания кода находится на этапе предварительной версии.</span><span class="sxs-lookup"><span data-stu-id="d4c8c-167">This online coding experience is in preview mode.</span></span> <span data-ttu-id="d4c8c-168">При возникновении проблем сообщите о них на странице [репозитория dotnet/try](https://github.com/dotnet/try/issues).</span><span class="sxs-lookup"><span data-stu-id="d4c8c-168">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>
- title: <span data-ttu-id="d4c8c-169">Выполнение задачи</span><span class="sxs-lookup"><span data-stu-id="d4c8c-169">Complete challenge</span></span>
  durationInMinutes: 3
  content: "<span data-ttu-id=\"d4c8c-170\">В результате получилось нечто подобное?</span><span class=\"sxs-lookup\"><span data-stu-id=\"d4c8c-170\">Did you come up with something like this?</span></span>\n\n```csharp\nvar fibonacciNumbers = new List<int> {1, 1};\n\nwhile (fibonacciNumbers.Count < 20)\n{\n    var previous = fibonacciNumbers[fibonacciNumbers.Count - 1];\n    var previous2 = fibonacciNumbers[fibonacciNumbers.Count - 2];\n    \n    fibonacciNumbers.Add(previous + previous2);\n}\nforeach(var item in fibonacciNumbers)\n    Console.WriteLine(item);\n```\n\n<span data-ttu-id=\"d4c8c-171\">При каждой итерации цикла суммируются два последних целых числа в списке. Полученное значение добавляется в список.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d4c8c-171\">With each iteration of the loop, you're taking the last two integers in the list, summing them, and adding that value to the list.</span></span> <span data-ttu-id=\"d4c8c-172\">Цикл повторяется, пока в список не будут добавлены 20 элементов.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d4c8c-172\">The loop repeats until you've added 20 items to the list.</span></span>\n\n> [!NOTE]\n> <span data-ttu-id=\"d4c8c-173\">Этот онлайн-интерфейс для написания кода находится на этапе предварительной версии.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d4c8c-173\">This online coding experience is in preview mode.</span></span> <span data-ttu-id=\"d4c8c-174\">При возникновении проблем сообщите о них на странице [репозитория dotnet/try](https://github.com/dotnet/try/issues).</span><span class=\"sxs-lookup\"><span data-stu-id=\"d4c8c-174\">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>\n"
- content: >-
    <span data-ttu-id="d4c8c-175">Вы выполнили все задачи в этом кратком руководстве.</span><span class="sxs-lookup"><span data-stu-id="d4c8c-175">You've completed the list quickstart.</span></span> <span data-ttu-id="d4c8c-176">Это заключительное интерактивное краткое руководство.</span><span class="sxs-lookup"><span data-stu-id="d4c8c-176">This quickstart is the final interactive quickstart.</span></span> <span data-ttu-id="d4c8c-177">Вы можете продолжить работу с этими краткими руководствами в собственной среде разработки.</span><span class="sxs-lookup"><span data-stu-id="d4c8c-177">You can continue these quickstarts on your own development environment.</span></span> <span data-ttu-id="d4c8c-178">Вы можете ознакомиться с основами [локальной разработки](local-environment.md), а затем выбрать краткое руководство.</span><span class="sxs-lookup"><span data-stu-id="d4c8c-178">Learn the basics of [local development](local-environment.md) and then pick a quickstart.</span></span> <span data-ttu-id="d4c8c-179">Вы также можете попробовать выполнить это упражнение, перейти сразу к следующему краткому руководству или начать заново проходить краткое руководство по [числам в C#](numbers-in-csharp-local.md).</span><span class="sxs-lookup"><span data-stu-id="d4c8c-179">You can try this same exercise, move directly to the next quickstart, or start again at with the [numbers in C#](numbers-in-csharp-local.md) quickstart.</span></span>


    <span data-ttu-id="d4c8c-180">Дополнительные сведения о работе с типом `List` см. в разделе о [коллекциях](../../standard/collections/index.md) [руководства по .NET](../../standard/index.md).</span><span class="sxs-lookup"><span data-stu-id="d4c8c-180">You can learn more about working with the `List` type in the [.NET Guide](../../standard/index.md) topic on [collections](../../standard/collections/index.md).</span></span> <span data-ttu-id="d4c8c-181">Также в нем описаны многие другие типы коллекций.</span><span class="sxs-lookup"><span data-stu-id="d4c8c-181">You'll also learn about many other collection types.</span></span>
