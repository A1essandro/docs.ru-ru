### YamlMime:YamlDocument
documentType: Tutorial
title: '<span data-ttu-id="65472-101">Использование коллекций с применением C#</span><span class="sxs-lookup"><span data-stu-id="65472-101">Collections in C#</span></span>'
metadata:
  title: '<span data-ttu-id="65472-102">Использование коллекций с применением C#.</span><span class="sxs-lookup"><span data-stu-id="65472-102">Collections in C#.</span></span> <span data-ttu-id="65472-103">Узнайте, как использовать последовательности и коллекции с применением C#.</span><span class="sxs-lookup"><span data-stu-id="65472-103">Learn to use sequences and collections in C#.</span></span>'
  description: '<span data-ttu-id="65472-104">В этом руководстве для интерактивного изучения C# используется браузер.</span><span class="sxs-lookup"><span data-stu-id="65472-104">In this tutorial, you''ll use your browser to learn C# interactively.</span></span> <span data-ttu-id="65472-105">Вы напишете код C# и сможете просмотреть результаты его компиляции и выполнения непосредственно в браузере.</span><span class="sxs-lookup"><span data-stu-id="65472-105">You write C# code and see the results of compiling and running your code directly in the browser.</span></span>'
  audience: Developer
  level: Beginner
  displayType: two-column
  interactive: csharp
items:
  - durationInMinutes: 1
    content: |
      <span data-ttu-id="65472-106">Это руководство поможет в интерактивном изучении C#. С помощью браузера вы напишете код C# и сможете просмотреть результаты его компиляции и выполнения.</span><span class="sxs-lookup"><span data-stu-id="65472-106">This tutorial teaches you C# interactively, using your browser to write C# and see the results of compiling and running your code.</span></span> <span data-ttu-id="65472-107">Руководство содержит ряд задач по созданию, изменению и изучению коллекций и массивов.</span><span class="sxs-lookup"><span data-stu-id="65472-107">It contains a series of lessons that create, modify and explore collections and arrays.</span></span>
  - title: <span data-ttu-id="65472-108">Создание списков</span><span class="sxs-lookup"><span data-stu-id="65472-108">Create lists</span></span>
    durationInMinutes: 2
    content: |
      <span data-ttu-id="65472-109">Запустите приведенный ниже код в интерактивном окне.</span><span class="sxs-lookup"><span data-stu-id="65472-109">Run the following code in the interactive window.</span></span> <span data-ttu-id="65472-110">Для этого введите следующий блок кода в интерактивном окне (замените "<name>" своим именем) и нажмите кнопку **Выполнить**:</span><span class="sxs-lookup"><span data-stu-id="65472-110">To do that, type the following code block in the interactive window (replace "<name>" with your name) and click the **Run** button:</span></span>

      ```csharp
      var names = new List<string> { "<name>", "Ana", "Felipe" };
      foreach (var name in names)
      {
        Console.WriteLine($"Hello {name.ToUpper()}!");
      }
      ```

      <span data-ttu-id="65472-111">Вы создали список строк, добавили в него три имени и вывели имена с преобразованием всех букв в прописные.</span><span class="sxs-lookup"><span data-stu-id="65472-111">You've just created a list of strings, added three names to that list, and printed out the names in all CAPS.</span></span> <span data-ttu-id="65472-112">Для циклического прохода по списку используются основные принципы, которые вы изучили в предыдущих кратких руководствах.</span><span class="sxs-lookup"><span data-stu-id="65472-112">You're using concepts that you've learned in earlier quick starts to loop through the list.</span></span>

      <span data-ttu-id="65472-113">В коде для отображения имен используются **интерполированные строки**.</span><span class="sxs-lookup"><span data-stu-id="65472-113">The code to display names makes use of **interpolated strings**.</span></span>  <span data-ttu-id="65472-114">Если перед `string` добавить символ `$`, код C# можно внедрять в объявление строки.</span><span class="sxs-lookup"><span data-stu-id="65472-114">When you precede a `string` with the `$` character, you can embed C# code in the string declaration.</span></span> <span data-ttu-id="65472-115">Фактическая строка заменяет код C# генерируемым значением.</span><span class="sxs-lookup"><span data-stu-id="65472-115">The actual string replaces that C# code with the value it generates.</span></span> <span data-ttu-id="65472-116">В этом примере она заменяет `{name.ToUpper()}` именами, буквы каждого из которых преобразованы в прописные, так как вызван метод <xref:System.String.ToUpper%2A>.</span><span class="sxs-lookup"><span data-stu-id="65472-116">In this example, it replaces the `{name.ToUpper()}` with each name, converted to capital letters, because you called the <xref:System.String.ToUpper%2A> method.</span></span>

      <span data-ttu-id="65472-117">Продолжим изучение.</span><span class="sxs-lookup"><span data-stu-id="65472-117">Let's keep exploring.</span></span>

      > [!NOTE]
      > <span data-ttu-id="65472-118">Этот онлайн-интерфейс для написания кода находится на этапе предварительной версии.</span><span class="sxs-lookup"><span data-stu-id="65472-118">This online coding experience is in preview mode.</span></span> <span data-ttu-id="65472-119">При возникновении проблем сообщите о них на странице [репозитория dotnet/try](https://github.com/dotnet/try/issues).</span><span class="sxs-lookup"><span data-stu-id="65472-119">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>
  - title: <span data-ttu-id="65472-120">Изменение содержимого списка</span><span class="sxs-lookup"><span data-stu-id="65472-120">Modify list contents</span></span>
    durationInMinutes: 3
    content: |
      <span data-ttu-id="65472-121">В созданной коллекции используется тип <xref:System.Collections.Generic.List%601>.</span><span class="sxs-lookup"><span data-stu-id="65472-121">The collection you created uses the <xref:System.Collections.Generic.List%601> type.</span></span> <span data-ttu-id="65472-122">При применении такого типа сохраняются последовательности элементов.</span><span class="sxs-lookup"><span data-stu-id="65472-122">This type stores sequences of elements.</span></span> <span data-ttu-id="65472-123">Тип элементов указывается в угловых скобках.</span><span class="sxs-lookup"><span data-stu-id="65472-123">You specify the type of the elements between the angle brackets.</span></span>

      <span data-ttu-id="65472-124">Важный аспект типа <xref:System.Collections.Generic.List%601> — возможность увеличения или уменьшения, что позволяет добавлять или удалять элементы.</span><span class="sxs-lookup"><span data-stu-id="65472-124">One important aspect of this <xref:System.Collections.Generic.List%601> type is that it can grow or shrink, enabling you to add or remove elements.</span></span> <span data-ttu-id="65472-125">Добавьте следующий фрагмент после написанного кода:</span><span class="sxs-lookup"><span data-stu-id="65472-125">Add the following code below the code you've already written:</span></span>

      ```csharp
      Console.WriteLine();
      names.Add("Maria");
      names.Add("Bill");
      names.Remove("Ana");
      foreach (var name in names)
      {
        Console.WriteLine($"Hello {name.ToUpper()}!");
      }
      ```

      <span data-ttu-id="65472-126">В конец списка добавлены еще два имени.</span><span class="sxs-lookup"><span data-stu-id="65472-126">You've added two more names to the end of the list.</span></span> <span data-ttu-id="65472-127">При этом одно имя удалено.</span><span class="sxs-lookup"><span data-stu-id="65472-127">You've also removed one as well.</span></span>

      <span data-ttu-id="65472-128"><xref:System.Collections.Generic.List%601> позволяет добавлять ссылки на отдельные элементы по **индексу**.</span><span class="sxs-lookup"><span data-stu-id="65472-128">The <xref:System.Collections.Generic.List%601> enables you to reference individual items by **index** as well.</span></span> <span data-ttu-id="65472-129">Доступ к элементам осуществляется при помощи токенов `[` и `]`.</span><span class="sxs-lookup"><span data-stu-id="65472-129">You access items using the `[` and `]` tokens.</span></span> <span data-ttu-id="65472-130">Добавьте следующий фрагмент после написанного кода и протестируйте результат:</span><span class="sxs-lookup"><span data-stu-id="65472-130">Add the following code below what you've already written and try it:</span></span>

      ```csharp
      Console.WriteLine($"My name is {names[0]}.");
      Console.WriteLine($"I've added {names[2]} and {names[3]} to the list.");
      ```

      <span data-ttu-id="65472-131">Доступ за пределами списка не предоставляется.</span><span class="sxs-lookup"><span data-stu-id="65472-131">You're not allowed to access past the end of the list.</span></span> <span data-ttu-id="65472-132">Вы можете проверить, как долго в списке используется свойство <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="65472-132">You can check how long the list is using the <xref:System.Collections.Generic.List%601.Count%2A> property.</span></span> <span data-ttu-id="65472-133">Добавьте следующий код, чтобы протестировать его:</span><span class="sxs-lookup"><span data-stu-id="65472-133">Add the following code to try it:</span></span>

      ```csharp
      Console.WriteLine($"The list has {names.Count} people in it");
      ```

      <span data-ttu-id="65472-134">Еще раз нажмите кнопку **Выполнить**, чтобы просмотреть результаты.</span><span class="sxs-lookup"><span data-stu-id="65472-134">Click **Run** again to see the results.</span></span> <span data-ttu-id="65472-135">В C# индексы начинаются с 0, поэтому максимальный допустимый индекс меньше, чем число элементов в списке.</span><span class="sxs-lookup"><span data-stu-id="65472-135">In C#, indices start at 0, so the largest valid index is one less than the number of items in the list.</span></span>

      > [!NOTE]
      > <span data-ttu-id="65472-136">Этот онлайн-интерфейс для написания кода находится на этапе предварительной версии.</span><span class="sxs-lookup"><span data-stu-id="65472-136">This online coding experience is in preview mode.</span></span> <span data-ttu-id="65472-137">При возникновении проблем сообщите о них на странице [репозитория dotnet/try](https://github.com/dotnet/try/issues).</span><span class="sxs-lookup"><span data-stu-id="65472-137">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>
  - title: <span data-ttu-id="65472-138">Поиск по спискам и их сортировка</span><span class="sxs-lookup"><span data-stu-id="65472-138">Search and sort lists</span></span>
    durationInMinutes: 5
    content: |
      <span data-ttu-id="65472-139">В наших примерах используются сравнительно небольшие списки. Но приложения часто создают списки с гораздо большим количеством элементов, иногда они исчисляются в тысячах.</span><span class="sxs-lookup"><span data-stu-id="65472-139">Our samples use relatively small lists, but your applications may often create lists with many more elements, sometimes numbering in the thousands.</span></span> <span data-ttu-id="65472-140">Чтобы найти элементы в таких больших коллекциях, необходимо выполнить поиск различных элементов по списку.</span><span class="sxs-lookup"><span data-stu-id="65472-140">To find elements in these larger collections, you need to search the list for different items.</span></span> <span data-ttu-id="65472-141">Метод <xref:System.Collections.Generic.List%601.IndexOf%2A> выполняет поиск элемента и возвращает его индекс.</span><span class="sxs-lookup"><span data-stu-id="65472-141">The <xref:System.Collections.Generic.List%601.IndexOf%2A> method searches for an item and returns the index of the item.</span></span> <span data-ttu-id="65472-142">Протестируйте его, чтобы узнать, как он работает.</span><span class="sxs-lookup"><span data-stu-id="65472-142">Try this to see how it works.</span></span>  <span data-ttu-id="65472-143">Добавьте следующий фрагмент после написанного кода:</span><span class="sxs-lookup"><span data-stu-id="65472-143">Add the following code below what you've written so far:</span></span>

      ```csharp
      var index = names.IndexOf("Felipe");
      if (index != -1)
        Console.WriteLine($"The name {names[index]} is at index {index}");

      var notFound = names.IndexOf("Not Found");
        Console.WriteLine($"When an item is not found, IndexOf returns {notFound}");
      ```

      <span data-ttu-id="65472-144">Мы не всегда можем знать, присутствует ли элемент в списке, поэтому нужно обязательно проверять индекс, возвращенный <xref:System.Collections.Generic.List%601.IndexOf%2A>.</span><span class="sxs-lookup"><span data-stu-id="65472-144">You may not know if an item is in the list, so you should always check the index returned by <xref:System.Collections.Generic.List%601.IndexOf%2A>.</span></span> <span data-ttu-id="65472-145">Если он имеет значение 1, элемент не найден.</span><span class="sxs-lookup"><span data-stu-id="65472-145">If it is -1, the item was not found.</span></span>

      <span data-ttu-id="65472-146">Кроме того, можно сортировать элементы в списке.</span><span class="sxs-lookup"><span data-stu-id="65472-146">The items in your list can be sorted as well.</span></span> <span data-ttu-id="65472-147">Метод <xref:System.Collections.Generic.List%601.Sort%2A> сортирует все элементы списка в обычном порядке (при использовании строк — в алфавитном порядке).</span><span class="sxs-lookup"><span data-stu-id="65472-147">The <xref:System.Collections.Generic.List%601.Sort%2A> method sorts all the items in the list in their normal order (alphabetically in the case of strings).</span></span> <span data-ttu-id="65472-148">Добавьте следующий фрагмент и снова выполните код:</span><span class="sxs-lookup"><span data-stu-id="65472-148">Add this code and run again:</span></span>

      ```csharp
      names.Sort();
      foreach (var name in names)
      {
        Console.WriteLine($"Hello {name.ToUpper()}!");
      }
      ```

      > [!NOTE]
      > <span data-ttu-id="65472-149">Этот онлайн-интерфейс для написания кода находится на этапе предварительной версии.</span><span class="sxs-lookup"><span data-stu-id="65472-149">This online coding experience is in preview mode.</span></span> <span data-ttu-id="65472-150">При возникновении проблем сообщите о них на странице [репозитория dotnet/try](https://github.com/dotnet/try/issues).</span><span class="sxs-lookup"><span data-stu-id="65472-150">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>
  - title: <span data-ttu-id="65472-151">Списки других типов</span><span class="sxs-lookup"><span data-stu-id="65472-151">Lists of other types</span></span>
    durationInMinutes: 5
    content: |
      <span data-ttu-id="65472-152">Вы уже использовали в списках тип `string`.</span><span class="sxs-lookup"><span data-stu-id="65472-152">You've been using the `string` type in lists so far.</span></span> <span data-ttu-id="65472-153">Создадим <xref:System.Collections.Generic.List%601> с использованием другого типа.</span><span class="sxs-lookup"><span data-stu-id="65472-153">Let's make a <xref:System.Collections.Generic.List%601> using a different type.</span></span> <span data-ttu-id="65472-154">Сначала создадим набор чисел.</span><span class="sxs-lookup"><span data-stu-id="65472-154">Let's build a set of numbers.</span></span> <span data-ttu-id="65472-155">Удалите написанный код, заменив его следующим:</span><span class="sxs-lookup"><span data-stu-id="65472-155">Delete the code you wrote so far, and replace it with this:</span></span>

      ```csharp
      var fibonacciNumbers = new List<int> {1, 1};
      ```

      <span data-ttu-id="65472-156">Будет создан список целых чисел. Для первых двух целых чисел будет задано значение 1.</span><span class="sxs-lookup"><span data-stu-id="65472-156">That creates a list of integers, and sets the first two integers to the value 1.</span></span> <span data-ttu-id="65472-157">Это два первых значения *последовательности Фибоначчи*.</span><span class="sxs-lookup"><span data-stu-id="65472-157">These are the first two values of a *Fibonacci Sequence*, a sequence of numbers.</span></span> <span data-ttu-id="65472-158">Каждое следующее число Фибоначчи — это сумма двух предыдущих чисел.</span><span class="sxs-lookup"><span data-stu-id="65472-158">Each next Fibonacci number is found by taking the sum of the previous two numbers.</span></span> <span data-ttu-id="65472-159">Добавьте этот код:</span><span class="sxs-lookup"><span data-stu-id="65472-159">Add this code:</span></span>

      ```csharp
      var previous = fibonacciNumbers[fibonacciNumbers.Count - 1];
      var previous2 = fibonacciNumbers[fibonacciNumbers.Count - 2];

      fibonacciNumbers.Add(previous + previous2);

      foreach(var item in fibonacciNumbers)
          Console.WriteLine(item);
      ```

      <span data-ttu-id="65472-160">Нажмите кнопку **Выполнить**, чтобы просмотреть результаты.</span><span class="sxs-lookup"><span data-stu-id="65472-160">Press **Run** to see the results;</span></span>

      > [!NOTE]
      > <span data-ttu-id="65472-161">Этот онлайн-интерфейс для написания кода находится на этапе предварительной версии.</span><span class="sxs-lookup"><span data-stu-id="65472-161">This online coding experience is in preview mode.</span></span> <span data-ttu-id="65472-162">При возникновении проблем сообщите о них на странице [репозитория dotnet/try](https://github.com/dotnet/try/issues).</span><span class="sxs-lookup"><span data-stu-id="65472-162">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>
  - title: <span data-ttu-id="65472-163">Задача</span><span class="sxs-lookup"><span data-stu-id="65472-163">Challenge</span></span>
    durationInMinutes: 10
    content: |
      <span data-ttu-id="65472-164">Попробуйте объединить некоторые задания из этого и предыдущих занятий.</span><span class="sxs-lookup"><span data-stu-id="65472-164">See if you can put together some of the lessons from this and earlier lessons.</span></span> <span data-ttu-id="65472-165">Расширьте код с числами Фибоначчи, который вы создали.</span><span class="sxs-lookup"><span data-stu-id="65472-165">Expand on what you've built so far with Fibonacci Numbers.</span></span> <span data-ttu-id="65472-166">Напишите и протестируйте код для создания первых 20 чисел в последовательности.</span><span class="sxs-lookup"><span data-stu-id="65472-166">Try and write the code to generate the first 20 numbers in the sequence.</span></span>

      > [!NOTE]
      > <span data-ttu-id="65472-167">Этот онлайн-интерфейс для написания кода находится на этапе предварительной версии.</span><span class="sxs-lookup"><span data-stu-id="65472-167">This online coding experience is in preview mode.</span></span> <span data-ttu-id="65472-168">При возникновении проблем сообщите о них на странице [репозитория dotnet/try](https://github.com/dotnet/try/issues).</span><span class="sxs-lookup"><span data-stu-id="65472-168">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>
  - title: <span data-ttu-id="65472-169">Выполнение задачи</span><span class="sxs-lookup"><span data-stu-id="65472-169">Complete challenge</span></span>
    durationInMinutes: 3
    content: |
      <span data-ttu-id="65472-170">В результате получилось нечто подобное?</span><span class="sxs-lookup"><span data-stu-id="65472-170">Did you come up with something like this?</span></span>

      ```csharp
      var fibonacciNumbers = new List<int> {1, 1};

      while (fibonacciNumbers.Count < 20)
      {
          var previous = fibonacciNumbers[fibonacciNumbers.Count - 1];
          var previous2 = fibonacciNumbers[fibonacciNumbers.Count - 2];
          
          fibonacciNumbers.Add(previous + previous2);
      }
      foreach(var item in fibonacciNumbers)
          Console.WriteLine(item);
      ```

      <span data-ttu-id="65472-171">При каждой итерации цикла суммируются два последних целых числа в списке. Полученное значение добавляется в список.</span><span class="sxs-lookup"><span data-stu-id="65472-171">With each iteration of the loop, you're taking the last two integers in the list, summing them, and adding that value to the list.</span></span> <span data-ttu-id="65472-172">Цикл повторяется, пока в список не будут добавлены 20 элементов.</span><span class="sxs-lookup"><span data-stu-id="65472-172">The loop repeats until you've added 20 items to the list.</span></span>

      > [!NOTE]
      > <span data-ttu-id="65472-173">Этот онлайн-интерфейс для написания кода находится на этапе предварительной версии.</span><span class="sxs-lookup"><span data-stu-id="65472-173">This online coding experience is in preview mode.</span></span> <span data-ttu-id="65472-174">При возникновении проблем сообщите о них на странице [репозитория dotnet/try](https://github.com/dotnet/try/issues).</span><span class="sxs-lookup"><span data-stu-id="65472-174">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>
  - content: |
      <span data-ttu-id="65472-175">Вы выполнили все задачи в руководстве.</span><span class="sxs-lookup"><span data-stu-id="65472-175">You've completed the list tutorial.</span></span>

      <span data-ttu-id="65472-176">Дополнительные сведения о работе с типом `List` см. в разделе о [коллекциях](../../standard/collections/index.md) [руководства по .NET](../../standard/index.md).</span><span class="sxs-lookup"><span data-stu-id="65472-176">You can learn more about working with the `List` type in the [.NET Guide](../../standard/index.md) topic on [collections](../../standard/collections/index.md).</span></span> <span data-ttu-id="65472-177">Также в нем описаны многие другие типы коллекций.</span><span class="sxs-lookup"><span data-stu-id="65472-177">You'll also learn about many other collection types.</span></span>