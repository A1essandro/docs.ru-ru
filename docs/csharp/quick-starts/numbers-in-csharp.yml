### YamlMime:YamlDocument
documentType: Tutorial
title: '<span data-ttu-id="514df-101">Числа в C#</span><span class="sxs-lookup"><span data-stu-id="514df-101">Numbers in C#</span></span>'
metadata:
  title: '<span data-ttu-id="514df-102">Числа в C#</span><span class="sxs-lookup"><span data-stu-id="514df-102">Numbers in C#</span></span>'
  description: '<span data-ttu-id="514df-103">В этом руководстве о числовых типах в C# для интерактивного изучения используется браузер.</span><span class="sxs-lookup"><span data-stu-id="514df-103">In this tutorial about numeric types, you''ll use your browser to learn C# interactively.</span></span> <span data-ttu-id="514df-104">Вы напишете код C# и сможете просмотреть результаты его компиляции и выполнения непосредственно в браузере.</span><span class="sxs-lookup"><span data-stu-id="514df-104">You''re going to write C# code and see the results of compiling and running your code directly in the browser.</span></span>'
  audience: Developer
  level: Beginner
  nextTutorialHref: branches-and-loops
  nextTutorialTitle: 'Branches and loops in C#'
  displayType: two-column
  interactive: csharp
items:
  - durationInMinutes: 1
    content: |
      <span data-ttu-id="514df-105">Это руководство поможет в интерактивном изучении числовых типов в C#. С помощью браузера вы напишете код C# и сможете просмотреть результаты его компиляции и выполнения.</span><span class="sxs-lookup"><span data-stu-id="514df-105">This tutorial teaches you about the number types in C# interactively, using your browser to write C# and see the results of compiling and running your code.</span></span> <span data-ttu-id="514df-106">Руководство содержит ряд уроков, в которых рассматриваются числа и математические операции в C#.</span><span class="sxs-lookup"><span data-stu-id="514df-106">It contains a series of lessons that explore numbers and math operations in C#.</span></span> <span data-ttu-id="514df-107">В рамках этих занятий вы ознакомитесь с основами языка C#.</span><span class="sxs-lookup"><span data-stu-id="514df-107">These lessons teach you the fundamentals of the C# language.</span></span>
  - title: <span data-ttu-id="514df-108">Вычисления с целыми числами</span><span class="sxs-lookup"><span data-stu-id="514df-108">Explore integer math</span></span>
    durationInMinutes: 4
    content: "<span data-ttu-id=\"514df-109\">Запустите приведенный ниже код в интерактивном окне.</span><span class=\"sxs-lookup\"><span data-stu-id=\"514df-109\">Run the following code in the interactive window.</span></span> <span data-ttu-id=\"514df-110\">Для этого введите следующий блок кода в интерактивном окне и нажмите кнопку **Выполнить**:</span><span class=\"sxs-lookup\"><span data-stu-id=\"514df-110\">To do that, type the following code block in the interactive window and click the **Run** button:</span></span>\n\n```csharp\nint a = 18;\nint b = 6;\nint c = a + b;\nConsole.WriteLine(c);\n```\n\n<span data-ttu-id=\"514df-111\">Вы увидели одну из основных математических операций с целыми числами.</span><span class=\"sxs-lookup\"><span data-stu-id=\"514df-111\">You've just seen one of the fundamental math operations with integers.</span></span> <span data-ttu-id=\"514df-112\">Тип `int` представляет **целое** положительное или отрицательное число.</span><span class=\"sxs-lookup\"><span data-stu-id=\"514df-112\">The `int` type represents an **integer**, a positive or negative whole number.</span></span> <span data-ttu-id=\"514df-113\">Для сложения используйте символ `+`.</span><span class=\"sxs-lookup\"><span data-stu-id=\"514df-113\">You use the `+` symbol for addition.</span></span> <span data-ttu-id=\"514df-114\">Другие стандартные математические операции с целыми числами включают:</span><span class=\"sxs-lookup\"><span data-stu-id=\"514df-114\">Other common mathematical operations for integers include:</span></span>\n\n- <span data-ttu-id=\"514df-115\">`-`\_— вычитание;</span><span class=\"sxs-lookup\"><span data-stu-id=\"514df-115\">`-` for subtraction</span></span>\n- <span data-ttu-id=\"514df-116\">`*`\_— умножение;</span><span class=\"sxs-lookup\"><span data-stu-id=\"514df-116\">`*` for multiplication</span></span>\n- <span data-ttu-id=\"514df-117\">`/`\_— деление.</span><span class=\"sxs-lookup\"><span data-stu-id=\"514df-117\">`/` for division</span></span>\n\n> [!TIP]\n> <span data-ttu-id=\"514df-118\">Вы можете изучить их самостоятельно с помощью этого руководства, изменив написанный код в интерактивном окне.</span><span class=\"sxs-lookup\"><span data-stu-id=\"514df-118\">Throughout this tutorial, you can explore on your own by modifying the code you've written in the interactive window.</span></span> <span data-ttu-id=\"514df-119\">Это руководство содержит примеры, которые вы можете повторить на каждом этапе.</span><span class=\"sxs-lookup\"><span data-stu-id=\"514df-119\">This tutorial provides examples that you can try at each step.</span></span>\n\n<span data-ttu-id=\"514df-120\">Начните с ознакомления с различными операциями.</span><span class=\"sxs-lookup\"><span data-stu-id=\"514df-120\">Start by exploring those different operations.</span></span> <span data-ttu-id=\"514df-121\">Измените третью строку, чтобы попробовать выполнить каждую операцию.</span><span class=\"sxs-lookup\"><span data-stu-id=\"514df-121\">Modify the third line to try each of these operations.</span></span> <span data-ttu-id=\"514df-122\">После каждого изменения нажимайте кнопку **Выполнить**.</span><span class=\"sxs-lookup\"><span data-stu-id=\"514df-122\">After each edit, click the **Run** button.</span></span>\n\n<span data-ttu-id=\"514df-123\">Вычитание:</span><span class=\"sxs-lookup\"><span data-stu-id=\"514df-123\">Subtraction:</span></span>\n\n```csharp\nint c = a - b;\n```\n\n<span data-ttu-id=\"514df-124\">Умножение:</span><span class=\"sxs-lookup\"><span data-stu-id=\"514df-124\">Multiplication:</span></span>\n\n```csharp\nint c = a * b;\n```\n\n<span data-ttu-id=\"514df-125\">Деление:</span><span class=\"sxs-lookup\"><span data-stu-id=\"514df-125\">Division:</span></span> \n\n```csharp\nint c = a / b;\n```\n\n<span data-ttu-id=\"514df-126\">Можно также поэкспериментировать, выполнив несколько математических операций в одной строке.</span><span class=\"sxs-lookup\"><span data-stu-id=\"514df-126\">You can also experiment by performing multiple mathematics operations in the same line, if you'd like.</span></span>\n\n> [!TIP]\n> <span data-ttu-id=\"514df-127\">Вероятнее всего, при изучении C# (как и любого другого языка программирования) вы будете допускать ошибки в коде.</span><span class=\"sxs-lookup\"><span data-stu-id=\"514df-127\">As you explore C# (or any programming language), you'll make mistakes when you write code.</span></span> <span data-ttu-id=\"514df-128\">**Компилятор** найдет эти ошибки и сообщит вам о них.</span><span class=\"sxs-lookup\"><span data-stu-id=\"514df-128\">The **compiler** will find those errors and report them to you.</span></span> <span data-ttu-id=\"514df-129\">Если результат содержит сообщения об ошибках, внимательно просмотрите пример кода и код в интерактивном окне, чтобы понять, что нужно исправить.</span><span class=\"sxs-lookup\"><span data-stu-id=\"514df-129\">When the output contains error messages, look closely at the example code, and the code in the interactive window to see what to fix.</span></span>\n> <span data-ttu-id=\"514df-130\">Это упражнение поможет вам изучить структуру кода C#.</span><span class=\"sxs-lookup\"><span data-stu-id=\"514df-130\">That exercise will help you learn the structure of C# code.</span></span>     \n\n> [!NOTE]\n> <span data-ttu-id=\"514df-131\">Этот онлайн-интерфейс для написания кода находится на этапе предварительной версии.</span><span class=\"sxs-lookup\"><span data-stu-id=\"514df-131\">This online coding experience is in preview mode.</span></span> <span data-ttu-id=\"514df-132\">При возникновении проблем сообщите о них на странице [репозитория dotnet/try](https://github.com/dotnet/try/issues).</span><span class=\"sxs-lookup\"><span data-stu-id=\"514df-132\">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>\n"
  - title: <span data-ttu-id="514df-133">Изучение порядка операций</span><span class="sxs-lookup"><span data-stu-id="514df-133">Explore order of operations</span></span>
    durationInMinutes: 7
    content: |
      <span data-ttu-id="514df-134">Язык C# определяет приоритет математических операций в соответствии с правилами математики.</span><span class="sxs-lookup"><span data-stu-id="514df-134">The C# language defines the precedence of different mathematics operations with rules consistent with the rules you learned in mathematics.</span></span>
      <span data-ttu-id="514df-135">Умножение и деление имеют приоритет над сложением и вычитанием.</span><span class="sxs-lookup"><span data-stu-id="514df-135">Multiplication and division take precedence over addition and subtraction.</span></span>
      <span data-ttu-id="514df-136">Убедитесь в этом, запустив следующий код в интерактивном окне:</span><span class="sxs-lookup"><span data-stu-id="514df-136">Explore that by running the following code in the interactive window:</span></span>

      ```csharp
      int a = 5;
      int b = 4;
      int c = 2;
      int d = a + b * c;
      Console.WriteLine(d);
      ```

      <span data-ttu-id="514df-137">В выходных данных видно, что умножение выполняется раньше сложения.</span><span class="sxs-lookup"><span data-stu-id="514df-137">The output demonstrates that the multiplication is performed before the addition.</span></span>

      <span data-ttu-id="514df-138">Можно применить другую последовательность операций. Для этого операции, которые должны выполняться первыми, нужно заключить в скобки:</span><span class="sxs-lookup"><span data-stu-id="514df-138">You can force a different order of operation by adding parentheses around the operation or operations you want performed first:</span></span>

      ```csharp
      int a = 5;
      int b = 4;
      int c = 2;
      int d = (a  + b) * c;
      Console.WriteLine(d);
      ```

      <span data-ttu-id="514df-139">Поэкспериментируйте, объединяя различные операции.</span><span class="sxs-lookup"><span data-stu-id="514df-139">Explore more by combining many different operations.</span></span> <span data-ttu-id="514df-140">Замените четвертую строку примерно таким кодом:</span><span class="sxs-lookup"><span data-stu-id="514df-140">Replace the fourth line above with something like this:</span></span>

      ```csharp
      int d = (a + b) - 6 * c + (12 * 4) / 3 + 12;
      ```

      <span data-ttu-id="514df-141">Возможно, вы заметили интересное поведение целых чисел.</span><span class="sxs-lookup"><span data-stu-id="514df-141">You may have noticed an interesting behavior for integers.</span></span> <span data-ttu-id="514df-142">Деление целых чисел всегда дает результат в виде целого числа, даже если математический результат содержит десятичную или дробную часть.</span><span class="sxs-lookup"><span data-stu-id="514df-142">Integer division always produces an integer result, even when the mathematical result would include a decimal or fraction portion.</span></span>

      <span data-ttu-id="514df-143">Если вы еще не видели пример такого поведения, выполните следующий код:</span><span class="sxs-lookup"><span data-stu-id="514df-143">If you haven't seen this behavior, try the following:</span></span>

      ```csharp
      int a = 7;
      int b = 4;
      int c = 3;
      int d = (a  + b) / c;
      Console.WriteLine(d);
      ```

      <span data-ttu-id="514df-144">Нажмите кнопку **Выполнить**, чтобы просмотреть результаты.</span><span class="sxs-lookup"><span data-stu-id="514df-144">Click **Run** again to see the results.</span></span>

      > [!NOTE]
      > <span data-ttu-id="514df-145">Этот онлайн-интерфейс для написания кода находится на этапе предварительной версии.</span><span class="sxs-lookup"><span data-stu-id="514df-145">This online coding experience is in preview mode.</span></span> <span data-ttu-id="514df-146">При возникновении проблем сообщите о них на странице [репозитория dotnet/try](https://github.com/dotnet/try/issues).</span><span class="sxs-lookup"><span data-stu-id="514df-146">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>
  - title: <span data-ttu-id="514df-147">Изучение точности и ограничений для целых чисел</span><span class="sxs-lookup"><span data-stu-id="514df-147">Explore integer precision and limits</span></span>
    durationInMinutes: 5
    content: |
      <span data-ttu-id="514df-148">В последнем примере вы увидели, что при делении целых чисел результат усекается.</span><span class="sxs-lookup"><span data-stu-id="514df-148">That last sample showed you that integer division truncates the result.</span></span>
      <span data-ttu-id="514df-149">Вы можете получить **остаток** с помощью оператора **остатка от деления**, который обозначается символом `%`:</span><span class="sxs-lookup"><span data-stu-id="514df-149">You can get the **remainder** by using the **modulo** operator, the `%` character:</span></span>

      ```csharp
      int a = 7;
      int b = 4;
      int c = 3;
      int d = (a  + b) / c;
      int e = (a + b) % c;
      Console.WriteLine("quotient: " + d);
      Console.WriteLine("remainder: " + e);
      ```

      <span data-ttu-id="514df-150">Тип целых чисел C# характеризуется еще одним отличием от математических целых: тип `int` имеет минимальные и максимальные ограничения.</span><span class="sxs-lookup"><span data-stu-id="514df-150">The C# integer type differs from mathematical integers in one other way: the `int` type has minimum and maximum limits.</span></span> <span data-ttu-id="514df-151">Выполните этот код в интерактивном окне, чтобы увидеть ограничения:</span><span class="sxs-lookup"><span data-stu-id="514df-151">Run this code in the interactive window to see those limits:</span></span>

      ```csharp
      int max = int.MaxValue;
      int min = int.MinValue;
      Console.WriteLine("The range of integers is " + min + " to " + max);
      ```

      <span data-ttu-id="514df-152">Если при вычислении выводится значение вне этих пределов, возникает условие **потери значимости** или **переполнения**.</span><span class="sxs-lookup"><span data-stu-id="514df-152">If a calculation produces a value that exceeds those limits, you have an **underflow** or **overflow** condition.</span></span> <span data-ttu-id="514df-153">Ответ должен находиться в диапазоне от минимального до максимального значения.</span><span class="sxs-lookup"><span data-stu-id="514df-153">The answer appears to wrap from one limit to the other.</span></span> <span data-ttu-id="514df-154">Добавьте эти две строки в интерактивное окно, чтобы увидеть пример:</span><span class="sxs-lookup"><span data-stu-id="514df-154">Add these two lines to the interactive window to see an example:</span></span>

      ```csharp
      int what = max + 3;
      Console.WriteLine("An example of overflow: " + what);
      ```

      <span data-ttu-id="514df-155">Обратите внимание, что ответ очень близок к минимальному целому числу (отрицательное значение).</span><span class="sxs-lookup"><span data-stu-id="514df-155">Notice that the answer is very close to the minimum (negative) integer.</span></span> <span data-ttu-id="514df-156">Он совпадает со значением `min + 2`.</span><span class="sxs-lookup"><span data-stu-id="514df-156">It's the same as `min + 2`.</span></span> <span data-ttu-id="514df-157">Оператор сложения **вызвал переполнение** допустимых значений для целых чисел.</span><span class="sxs-lookup"><span data-stu-id="514df-157">The addition operation **overflowed** the allowed values for integers.</span></span>
      <span data-ttu-id="514df-158">Ответ является очень большим отрицательным числом, так как переполнение покрывает диапазон от наибольшего целого числа до наименьшего.</span><span class="sxs-lookup"><span data-stu-id="514df-158">The answer is a very large negative number because an overflow "wraps around" from the largest possible integer value to the smallest.</span></span>

      <span data-ttu-id="514df-159">Существуют другие числовые типы с различными ограничениями и точностью, которые можно использовать, если тип `int` не соответствует вашим требованиям.</span><span class="sxs-lookup"><span data-stu-id="514df-159">There are other numeric types with different limits and precision that you would use when the `int` type doesn't meet your needs.</span></span> <span data-ttu-id="514df-160">Рассмотрим их.</span><span class="sxs-lookup"><span data-stu-id="514df-160">Let's explore those next.</span></span>

      > [!NOTE]
      > <span data-ttu-id="514df-161">Этот онлайн-интерфейс для написания кода находится на этапе предварительной версии.</span><span class="sxs-lookup"><span data-stu-id="514df-161">This online coding experience is in preview mode.</span></span> <span data-ttu-id="514df-162">При возникновении проблем сообщите о них на странице [репозитория dotnet/try](https://github.com/dotnet/try/issues).</span><span class="sxs-lookup"><span data-stu-id="514df-162">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>
  - title: <span data-ttu-id="514df-163">Работа с типом double</span><span class="sxs-lookup"><span data-stu-id="514df-163">Work with the double type</span></span>
    durationInMinutes: 5
    content: "<span data-ttu-id=\"514df-164\">Числовой тип `double` представляет число с плавающей запятой двойной точности.</span><span class=\"sxs-lookup\"><span data-stu-id=\"514df-164\">The `double` numeric type represents a double-precision floating point number.</span></span> <span data-ttu-id=\"514df-165\">Эти термины могут быть новыми для вас.</span><span class=\"sxs-lookup\"><span data-stu-id=\"514df-165\">Those terms may be new to you.</span></span> <span data-ttu-id=\"514df-166\">Число **с плавающей запятой** можно использовать для представления нецелых чисел, которые могут быть очень большими или малыми.</span><span class=\"sxs-lookup\"><span data-stu-id=\"514df-166\">A **floating point** number is useful to represent non-integral numbers that may be very large, or small in magnitude.</span></span> <span data-ttu-id=\"514df-167\">**Двойная точность** означает, что для хранения этих чисел используется большая точность, чем **одиночная**.</span><span class=\"sxs-lookup\"><span data-stu-id=\"514df-167\">**Double-precision** means that these numbers are stored using greater precision than **single-precision**.</span></span> <span data-ttu-id=\"514df-168\">На современных компьютерах числа с двойной точностью используется чаще, чем с одиночной.</span><span class=\"sxs-lookup\"><span data-stu-id=\"514df-168\">On modern computers, it is more common to use double precision than single precision numbers.</span></span>\n<span data-ttu-id=\"514df-169\">Рассмотрим их.</span><span class=\"sxs-lookup\"><span data-stu-id=\"514df-169\">Let's explore.</span></span> <span data-ttu-id=\"514df-170\">Запустите следующий код в интерактивном окне и посмотрите на результат:</span><span class=\"sxs-lookup\"><span data-stu-id=\"514df-170\">Try the following code in the interactive window and see the result:</span></span>\n\n```csharp\ndouble a = 5;\ndouble b = 4;\ndouble c = 2;\ndouble d = (a  + b) / c;\nConsole.WriteLine(d);\n```\n\n<span data-ttu-id=\"514df-171\">Обратите внимание, что ответ включает десятичную долю частного.</span><span class=\"sxs-lookup\"><span data-stu-id=\"514df-171\">Notice that the answer includes the decimal portion of the quotient.</span></span> <span data-ttu-id=\"514df-172\">Попробуйте более сложное выражение с типом double:</span><span class=\"sxs-lookup\"><span data-stu-id=\"514df-172\">Try a slightly more complicated expression with doubles:</span></span>\n\n```csharp\ndouble a = 19;\ndouble b = 23;\ndouble c = 8;\ndouble d = (a  + b) / c;\nConsole.WriteLine(d);\n```\n\n<span data-ttu-id=\"514df-173\">Диапазон значений типа double гораздо больше, чем диапазон значений целых чисел.</span><span class=\"sxs-lookup\"><span data-stu-id=\"514df-173\">The range of a double value is much greater than integer values.</span></span> <span data-ttu-id=\"514df-174\">Запустите этот код в интерактивном окне:</span><span class=\"sxs-lookup\"><span data-stu-id=\"514df-174\">Try the following code in the interactive window:</span></span>\n\n```csharp\ndouble max = double.MaxValue;\ndouble min = double.MinValue;\nConsole.WriteLine(\"The range of double is \" + min + \" to \" + max);\n```\n\n<span data-ttu-id=\"514df-175\">Значения, которые выводятся, являются экспоненциальным представлением.</span><span class=\"sxs-lookup\"><span data-stu-id=\"514df-175\">These values are printed out to represent scientific notation.</span></span> <span data-ttu-id=\"514df-176\">Число слева от символа `E` является значащим.</span><span class=\"sxs-lookup\"><span data-stu-id=\"514df-176\">The number to the left of the `E` is the significant.</span></span> <span data-ttu-id=\"514df-177\">Число справа\_— это показатель степени, который равен 10.</span><span class=\"sxs-lookup\"><span data-stu-id=\"514df-177\">The number to the right is the exponent, as a power of 10.</span></span> <span data-ttu-id=\"514df-178\">На внутреннем уровне эти числа представлены точно так же, но в двоичной форме.</span><span class=\"sxs-lookup\"><span data-stu-id=\"514df-178\">Internally, these numbers are represented similarly, but in a binary form.</span></span> <span data-ttu-id=\"514df-179\">Одна часть представляет значащие двоичные цифры.</span><span class=\"sxs-lookup\"><span data-stu-id=\"514df-179\">One part represents the significant binary digits.</span></span>\n<span data-ttu-id=\"514df-180\">Другая часть представляет размещение двоичной запятой (она выполняет ту же роль, что и десятичная запятая) относительно значащих цифр.</span><span class=\"sxs-lookup\"><span data-stu-id=\"514df-180\">Another part represents where to place the binary point (analogous to a decimal point) relative to those significant digits.</span></span>\n\n<span data-ttu-id=\"514df-181\">Так же, как десятичные числа в математике, значения double в C# могут содержать ошибки округления.</span><span class=\"sxs-lookup\"><span data-stu-id=\"514df-181\">Just like decimal numbers in math, doubles in C# can have rounding errors.</span></span> <span data-ttu-id=\"514df-182\">Выполните этот код:</span><span class=\"sxs-lookup\"><span data-stu-id=\"514df-182\">Try this code:</span></span>\n\n```csharp\ndouble third = 1.0 / 3.0;\nConsole.WriteLine(third);\n```\n\n<span data-ttu-id=\"514df-183\">Вы знаете, что периодическая десятичная дробь `0.3` не равняется `1/3`.</span><span class=\"sxs-lookup\"><span data-stu-id=\"514df-183\">You know that `0.3` repeating is not exactly the same as `1/3`.</span></span>\n\n<span data-ttu-id=\"514df-184\">***Задача***</span><span class=\"sxs-lookup\"><span data-stu-id=\"514df-184\">***Challenge***</span></span>\n\n<span data-ttu-id=\"514df-185\">Выполните другие вычисления с большими числами, малыми числами, умножением и делением с помощью типа `double`.</span><span class=\"sxs-lookup\"><span data-stu-id=\"514df-185\">Try other calculations with large numbers, small numbers, multiplication and division using the `double` type.</span></span>  <span data-ttu-id=\"514df-186\">Попробуйте выполнить более сложные вычисления.</span><span class=\"sxs-lookup\"><span data-stu-id=\"514df-186\">Try more complicated calculations.</span></span>\n\n> [!NOTE]\n> <span data-ttu-id=\"514df-187\">Этот онлайн-интерфейс для написания кода находится на этапе предварительной версии.</span><span class=\"sxs-lookup\"><span data-stu-id=\"514df-187\">This online coding experience is in preview mode.</span></span> <span data-ttu-id=\"514df-188\">При возникновении проблем сообщите о них на странице [репозитория dotnet/try](https://github.com/dotnet/try/issues).</span><span class=\"sxs-lookup\"><span data-stu-id=\"514df-188\">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>\n"
  - title: <span data-ttu-id="514df-189">Работа с типами с фиксированной запятой</span><span class="sxs-lookup"><span data-stu-id="514df-189">Work with fixed point types</span></span>
    durationInMinutes: 8
    content: "<span data-ttu-id=\"514df-190\">Вы уже ознакомились с базовыми числовыми типами в C#\_— целыми числами и числами типа double.</span><span class=\"sxs-lookup\"><span data-stu-id=\"514df-190\">You've seen the basic numeric types in C#: integers and doubles.</span></span>  <span data-ttu-id=\"514df-191\">Осталось изучить еще один тип: `decimal`.</span><span class=\"sxs-lookup\"><span data-stu-id=\"514df-191\">There is one other type to learn: the `decimal` type.</span></span> <span data-ttu-id=\"514df-192\">Тип `decimal` имеет меньший диапазон, но большую точность, чем `double`.</span><span class=\"sxs-lookup\"><span data-stu-id=\"514df-192\">The `decimal` type has a smaller range, but greater precision than `double`.</span></span> <span data-ttu-id=\"514df-193\">Термин **фиксированная запятая** означает, что десятичный (или двоичный) разделитель не перемещается.</span><span class=\"sxs-lookup\"><span data-stu-id=\"514df-193\">The term **fixed point** means that the decimal point (or binary point) doesn't move.</span></span> <span data-ttu-id=\"514df-194\">Например:</span><span class=\"sxs-lookup\"><span data-stu-id=\"514df-194\">Let's take a look:</span></span>\n\n```csharp\ndecimal min = decimal.MinValue;\ndecimal max = decimal.MaxValue;\nConsole.WriteLine(\"The range of the decimal type is \" + min + \" to \" + max);\n```\n\n<span data-ttu-id=\"514df-195\">Обратите внимание, что диапазон меньше, чем для типа `double`.</span><span class=\"sxs-lookup\"><span data-stu-id=\"514df-195\">Notice that the range is smaller than the `double` type.</span></span> <span data-ttu-id=\"514df-196\">Вы можете убедиться в повышении точности при использовании типа decimal, выполнив следующий код:</span><span class=\"sxs-lookup\"><span data-stu-id=\"514df-196\">You can see the greater precision with the decimal type by trying the following code:</span></span>\n\n```csharp\ndouble a = 1.0;\ndouble b = 3.0;\nConsole.WriteLine(a / b);\n\ndecimal c = 1.0M;\ndecimal d = 3.0M;\nConsole.WriteLine(c / d);\n```\n\n<span data-ttu-id=\"514df-197\">Суффикс `M` возле чисел указывает, что для константы должен использоваться тип `decimal`.</span><span class=\"sxs-lookup\"><span data-stu-id=\"514df-197\">The `M` suffix on the numbers is how you indicate that a constant should use the `decimal` type.</span></span>\n\n<span data-ttu-id=\"514df-198\">Обратите внимание, что при вычислении с использованием типа decimal справа от запятой содержится больше цифр.</span><span class=\"sxs-lookup\"><span data-stu-id=\"514df-198\">Notice that the math using the decimal type has more digits to the right of the decimal point.</span></span> \n\n<span data-ttu-id=\"514df-199\">***Задача***</span><span class=\"sxs-lookup\"><span data-stu-id=\"514df-199\">***Challenge***</span></span>\n\n<span data-ttu-id=\"514df-200\">Теперь, когда вы ознакомились с разными числовыми типами, напишите код, который позволяет вычислить площадь круга с радиусом 6,35 см.</span><span class=\"sxs-lookup\"><span data-stu-id=\"514df-200\">Now that you've seen the different numeric types, write code that calculates the area of a circle whose radius is 2.50 inches.</span></span> <span data-ttu-id=\"514df-201\">Помните, что площадь круга равна квадрату радиуса, умноженному на число пи.</span><span class=\"sxs-lookup\"><span data-stu-id=\"514df-201\">Remember that the area of a circle is the radius squared multiplied by PI.</span></span> <span data-ttu-id=\"514df-202\">Подсказка: в C# есть константа пи `Math.PI`, которую можно использовать.</span><span class=\"sxs-lookup\"><span data-stu-id=\"514df-202\">One hint: C# contains a constant for PI: `Math.PI` that you can use for that value.</span></span> \n\n> [!NOTE]\n> <span data-ttu-id=\"514df-203\">Этот онлайн-интерфейс для написания кода находится на этапе предварительной версии.</span><span class=\"sxs-lookup\"><span data-stu-id=\"514df-203\">This online coding experience is in preview mode.</span></span> <span data-ttu-id=\"514df-204\">При возникновении проблем сообщите о них на странице [репозитория dotnet/try](https://github.com/dotnet/try/issues).</span><span class=\"sxs-lookup\"><span data-stu-id=\"514df-204\">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>\n"
  - title: <span data-ttu-id="514df-205">Выполнение задачи</span><span class="sxs-lookup"><span data-stu-id="514df-205">Complete challenge</span></span>
    durationInMinutes: 1
    content: |
      <span data-ttu-id="514df-206">Вы выполнили задачи руководства "Числа в C#".</span><span class="sxs-lookup"><span data-stu-id="514df-206">You've completed the "Numbers in C#" tutorial.</span></span> <span data-ttu-id="514df-207">Дополнительные сведения о числах в C# см. в следующих статьях:</span><span class="sxs-lookup"><span data-stu-id="514df-207">You can learn more about numbers in C# in the following topics:</span></span>

      <span data-ttu-id="514df-208">[Таблица целых типов](../language-reference/keywords/integral-types-table.md) </span><span class="sxs-lookup"><span data-stu-id="514df-208">[Integral Types Table](../language-reference/keywords/integral-types-table.md) </span></span>  
      <span data-ttu-id="514df-209">[Таблица типов с плавающей запятой](../language-reference/keywords/floating-point-types-table.md) </span><span class="sxs-lookup"><span data-stu-id="514df-209">[Floating-Point Types Table](../language-reference/keywords/floating-point-types-table.md) </span></span>  
      <span data-ttu-id="514df-210">[Таблица встроенных типов](../language-reference/keywords/built-in-types-table.md) </span><span class="sxs-lookup"><span data-stu-id="514df-210">[Built-In Types Table](../language-reference/keywords/built-in-types-table.md) </span></span>  
      <span data-ttu-id="514df-211">[Таблица неявных числовых преобразований](../language-reference/keywords/implicit-numeric-conversions-table.md) </span><span class="sxs-lookup"><span data-stu-id="514df-211">[Implicit Numeric Conversions Table](../language-reference/keywords/implicit-numeric-conversions-table.md) </span></span>  
      [<span data-ttu-id="514df-212">Таблица явных числовых преобразований</span><span class="sxs-lookup"><span data-stu-id="514df-212">Explicit Numeric Conversions Table</span></span>](../language-reference/keywords/explicit-numeric-conversions-table.md)