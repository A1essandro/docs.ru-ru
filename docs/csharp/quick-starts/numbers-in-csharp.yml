### YamlMime:Tutorial
title: "<span data-ttu-id=\"b3ad3-101\">Числа в C#</span><span class=\"sxs-lookup\"><span data-stu-id=\"b3ad3-101\">Numbers in C#</span></span>"
metadata:
  title: "Краткие руководства по C#. Интерактивное руководство по числам в C#"
  description: "В этом кратком руководстве по числовым типам в C# для интерактивного изучения используется браузер. Вы напишете код C# и сможете просмотреть результаты его компиляции и выполнения непосредственно в браузере."
  audience: Developer
  ms.topic: get-started-article
  ms.custom: mvc
  level: Beginner
  nextTutorialHref: branches-and-loops
  nextTutorialTitle: "<span data-ttu-id=\"b3ad3-105\">Ветви и циклы в C#</span><span class=\"sxs-lookup\"><span data-stu-id=\"b3ad3-105\">Branches and loops in C#</span></span>"
  displayType: two-column
  interactive: csharp
  ms.prod: .net
  ms.technology: devlang-csharp
  ms.openlocfilehash: d611f2796471fbb094020caaa70a754c093a833c
  ms.sourcegitcommit: d2da0142247ef42a219a5d2907f153e62dc6ea0d
  ms.translationtype: HT
  ms.contentlocale: ru-RU
  ms.lasthandoff: 02/01/2018
items:
- durationInMinutes: 1
  content: "<span data-ttu-id=\"b3ad3-106\">Это краткое руководство поможет в интерактивном изучении числовых типов в C#. С помощью браузера вы напишете код C# и сможете просмотреть результаты его компиляции и выполнения.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b3ad3-106\">This quick start teaches you about the number types in C# interactively, using your browser to write C# and see the results of compiling and running your code.</span></span> <span data-ttu-id=\"b3ad3-107\">Руководство содержит ряд уроков, в которых рассматриваются числа и математические операции в C#.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b3ad3-107\">It contains a series of lessons that explore numbers and math operations in C#.</span></span> <span data-ttu-id=\"b3ad3-108\">В рамках этих занятий вы ознакомитесь с основами языка C#.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b3ad3-108\">These lessons teach you the fundamentals of the C# language.</span></span>\n"
- title: "<span data-ttu-id=\"b3ad3-109\">Вычисления с целыми числами</span><span class=\"sxs-lookup\"><span data-stu-id=\"b3ad3-109\">Explore integer math</span></span>"
  durationInMinutes: 4
  content: "<span data-ttu-id=\"b3ad3-110\">Запустите приведенный ниже код в интерактивном окне.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b3ad3-110\">Run the following code in the interactive window.</span></span> <span data-ttu-id=\"b3ad3-111\">Для этого введите следующий блок кода в интерактивном окне и нажмите кнопку **Выполнить**:</span><span class=\"sxs-lookup\"><span data-stu-id=\"b3ad3-111\">To do that, type the following code block in the interactive window and click the **Run** button:</span></span>\n\n```csharp\nint a = 18;\nint b = 6;\nint c = a + b;\nConsole.WriteLine(c);\n```\n\n<span data-ttu-id=\"b3ad3-112\">Вы увидели одну из основных математических операций с целыми числами.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b3ad3-112\">You've just seen one of the fundamental math operations with integers.</span></span> <span data-ttu-id=\"b3ad3-113\">Тип `int` представляет **целое** положительное или отрицательное число.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b3ad3-113\">The `int` type represents an **integer**, a positive or negative whole number.</span></span> <span data-ttu-id=\"b3ad3-114\">Для сложения используйте символ `+`.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b3ad3-114\">You use the `+` symbol for addition.</span></span> <span data-ttu-id=\"b3ad3-115\">Другие стандартные математические операции с целыми числами включают:</span><span class=\"sxs-lookup\"><span data-stu-id=\"b3ad3-115\">Other common mathematical operations for integers include:</span></span>\n\n- <span data-ttu-id=\"b3ad3-116\">`-` — вычитание;</span><span class=\"sxs-lookup\"><span data-stu-id=\"b3ad3-116\">`-` for subtraction</span></span>\n- <span data-ttu-id=\"b3ad3-117\">`*` — умножение;</span><span class=\"sxs-lookup\"><span data-stu-id=\"b3ad3-117\">`*` for multiplication</span></span>\n- <span data-ttu-id=\"b3ad3-118\">`/` — деление.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b3ad3-118\">`/` for division</span></span>\n\n> [!TIP]\n> <span data-ttu-id=\"b3ad3-119\">Вы можете изучить их самостоятельно с помощью этого краткого руководства, изменив написанный код в интерактивном окне.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b3ad3-119\">Throughout this quick start, you can explore on your own by modifying the code you've written in the interactive window.</span></span> <span data-ttu-id=\"b3ad3-120\">Это краткое руководство содержит примеры, которые вы можете повторить на каждом этапе.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b3ad3-120\">This quick start provides examples that you can try at each step.</span></span>\n\n<span data-ttu-id=\"b3ad3-121\">Начните с ознакомления с различными операциями.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b3ad3-121\">Start by exploring those different operations.</span></span> <span data-ttu-id=\"b3ad3-122\">Измените третью строку, чтобы попробовать выполнить каждую операцию.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b3ad3-122\">Modify the third line to try each of these operations.</span></span> <span data-ttu-id=\"b3ad3-123\">После каждого изменения нажимайте кнопку **Выполнить**.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b3ad3-123\">After each edit, click the **Run** button.</span></span>\n\n<span data-ttu-id=\"b3ad3-124\">Вычитание:</span><span class=\"sxs-lookup\"><span data-stu-id=\"b3ad3-124\">Subtraction:</span></span>\n\n```csharp\nint c = a - b;\n```\n\n<span data-ttu-id=\"b3ad3-125\">Умножение:</span><span class=\"sxs-lookup\"><span data-stu-id=\"b3ad3-125\">Multiplication:</span></span>\n\n```csharp\nint c = a * b;\n```\n\n<span data-ttu-id=\"b3ad3-126\">Деление:</span><span class=\"sxs-lookup\"><span data-stu-id=\"b3ad3-126\">Division:</span></span> \n\n```csharp\nint c = a / b;\n```\n\n<span data-ttu-id=\"b3ad3-127\">Можно также поэкспериментировать, выполнив несколько математических операций в одной строке.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b3ad3-127\">You can also experiment by performing multiple mathematics operations in the same line, if you'd like.</span></span>\n\n> [!TIP]\n> <span data-ttu-id=\"b3ad3-128\">Вероятнее всего, при изучении C# (как и любого другого языка программирования) вы будете допускать ошибки в коде.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b3ad3-128\">As you explore C# (or any programming language), you'll make mistakes when you write code.</span></span> <span data-ttu-id=\"b3ad3-129\">**Компилятор** найдет эти ошибки и сообщит вам о них.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b3ad3-129\">The **compiler** will find those errors and report them to you.</span></span> <span data-ttu-id=\"b3ad3-130\">Если результат содержит сообщения об ошибках, внимательно просмотрите пример кода и код в интерактивном окне, чтобы понять, что нужно исправить.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b3ad3-130\">When the output contains error messages, look closely at the example code, and the code in the interactive window to see what to fix.</span></span>\n> <span data-ttu-id=\"b3ad3-131\">Это упражнение поможет вам изучить структуру кода C#.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b3ad3-131\">That exercise will help you learn the structure of C# code.</span></span>     \n\n> [!NOTE]\n> <span data-ttu-id=\"b3ad3-132\">Этот онлайн-интерфейс для написания кода находится на этапе предварительной версии.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b3ad3-132\">This online coding experience is in preview mode.</span></span> <span data-ttu-id=\"b3ad3-133\">При возникновении проблем сообщите о них на странице [репозитория dotnet/try](https://github.com/dotnet/try/issues).</span><span class=\"sxs-lookup\"><span data-stu-id=\"b3ad3-133\">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>\n"
- title: "<span data-ttu-id=\"b3ad3-134\">Изучение порядка операций</span><span class=\"sxs-lookup\"><span data-stu-id=\"b3ad3-134\">Explore order of operations</span></span>"
  durationInMinutes: 7
  content: "<span data-ttu-id=\"b3ad3-135\">Язык C# определяет приоритет математических операций в соответствии с правилами математики.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b3ad3-135\">The C# language defines the precedence of different mathematics operations with rules consistent with the rules you learned in mathematics.</span></span>\n<span data-ttu-id=\"b3ad3-136\">Умножение и деление имеют приоритет над сложением и вычитанием.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b3ad3-136\">Multiplication and division take precedence over addition and subtraction.</span></span>\n<span data-ttu-id=\"b3ad3-137\">Убедитесь в этом, запустив следующий код в интерактивном окне:</span><span class=\"sxs-lookup\"><span data-stu-id=\"b3ad3-137\">Explore that by running the following code in the interactive window:</span></span>\n\n```csharp\nint a = 5;\nint b = 4;\nint c = 2;\nint d = a + b * c;\nConsole.WriteLine(d);\n```\n\n<span data-ttu-id=\"b3ad3-138\">В выходных данных видно, что умножение выполняется раньше сложения.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b3ad3-138\">The output demonstrates that the multiplication is performed before the addition.</span></span>\n\n<span data-ttu-id=\"b3ad3-139\">Можно применить другую последовательность операций. Для этого операции, которые должны выполняться первыми, нужно заключить в скобки:</span><span class=\"sxs-lookup\"><span data-stu-id=\"b3ad3-139\">You can force a different order of operation by adding parentheses around the operation or operations you want performed first:</span></span>\n\n```csharp\nint a = 5;\nint b = 4;\nint c = 2;\nint d = (a  + b) * c;\nConsole.WriteLine(d);\n```\n\n<span data-ttu-id=\"b3ad3-140\">Поэкспериментируйте, объединяя различные операции.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b3ad3-140\">Explore more by combining many different operations.</span></span> <span data-ttu-id=\"b3ad3-141\">Замените четвертую строку примерно таким кодом:</span><span class=\"sxs-lookup\"><span data-stu-id=\"b3ad3-141\">Replace the fourth line above with something like this:</span></span>\n\n```csharp\nint d = (a + b) - 6 * c + (12 * 4) / 3 + 12;\n```\n\n<span data-ttu-id=\"b3ad3-142\">Возможно, вы заметили интересное поведение целых чисел.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b3ad3-142\">You may have noticed an interesting behavior for integers.</span></span> <span data-ttu-id=\"b3ad3-143\">Деление целых чисел всегда дает результат в виде целого числа, даже если ожидаемый результат содержит десятичную или дробную часть.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b3ad3-143\">Integer division always produces an integer result, even when you'd expect the result to include a decimal or fractional portion.</span></span>\n\n<span data-ttu-id=\"b3ad3-144\">Если вы еще не видели пример такого поведения, выполните следующий код:</span><span class=\"sxs-lookup\"><span data-stu-id=\"b3ad3-144\">If you haven't seen this behavior, try the following:</span></span>\n\n```csharp\nint a = 7;\nint b = 4;\nint c = 3;\nint d = (a  + b) / c;\nConsole.WriteLine(d);\n```\n\n<span data-ttu-id=\"b3ad3-145\">Нажмите кнопку **Выполнить**, чтобы просмотреть результаты.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b3ad3-145\">Click **Run** again to see the results.</span></span>\n\n> [!NOTE]\n> <span data-ttu-id=\"b3ad3-146\">Этот онлайн-интерфейс для написания кода находится на этапе предварительной версии.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b3ad3-146\">This online coding experience is in preview mode.</span></span> <span data-ttu-id=\"b3ad3-147\">При возникновении проблем сообщите о них на странице [репозитория dotnet/try](https://github.com/dotnet/try/issues).</span><span class=\"sxs-lookup\"><span data-stu-id=\"b3ad3-147\">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>\n"
- title: "<span data-ttu-id=\"b3ad3-148\">Изучение точности и ограничений для целых чисел</span><span class=\"sxs-lookup\"><span data-stu-id=\"b3ad3-148\">Explore integer precision and limits</span></span>"
  durationInMinutes: 5
  content: "<span data-ttu-id=\"b3ad3-149\">В последнем примере вы увидели, что при делении целых чисел результат усекается.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b3ad3-149\">That last sample showed you that integer division truncates the result.</span></span>\n<span data-ttu-id=\"b3ad3-150\">Вы можете получить **остаток** с помощью оператора **остатка от деления**, который обозначается символом `%`:</span><span class=\"sxs-lookup\"><span data-stu-id=\"b3ad3-150\">You can get the **remainder** by using the **modulo** operator, the `%` character:</span></span>\n\n```csharp\nint a = 7;\nint b = 4;\nint c = 3;\nint d = (a  + b) / c;\nint e = (a + b) % c;\nConsole.WriteLine($\"quotient: {d}\");\nConsole.WriteLine($\"remainder: {e}\");\n```\n\n<span data-ttu-id=\"b3ad3-151\">Тип целых чисел C# характеризуется еще одним отличием от математических целых: тип `int` имеет минимальные и максимальные ограничения.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b3ad3-151\">The C# integer type differs from mathematical integers in one other way: the `int` type has minimum and maximum limits.</span></span> <span data-ttu-id=\"b3ad3-152\">Выполните этот код в интерактивном окне, чтобы увидеть ограничения:</span><span class=\"sxs-lookup\"><span data-stu-id=\"b3ad3-152\">Run this code in the interactive window to see those limits:</span></span>\n\n```csharp\nint max = int.MaxValue;\nint min = int.MinValue;\nConsole.WriteLine($\"The range of integers is {min} to {max}\");\n```\n\n<span data-ttu-id=\"b3ad3-153\">Если при вычислении выводится значение вне этих пределов, возникает условие **потери значимости** или **переполнения**.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b3ad3-153\">If a calculation produces a value that exceeds those limits, you have an **underflow** or **overflow** condition.</span></span> <span data-ttu-id=\"b3ad3-154\">Ответ должен находиться в диапазоне от минимального до максимального значения.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b3ad3-154\">The answer appears to wrap from one limit to the other.</span></span> <span data-ttu-id=\"b3ad3-155\">Добавьте эти две строки в интерактивное окно, чтобы увидеть пример:</span><span class=\"sxs-lookup\"><span data-stu-id=\"b3ad3-155\">Add these two lines to the interactive window to see an example:</span></span>\n\n```csharp\nint what = max + 3;\nConsole.WriteLine($\"An example of overflow: {what}\");\n```\n\n<span data-ttu-id=\"b3ad3-156\">Обратите внимание, что ответ очень близок к минимальному целому числу (отрицательное значение).</span><span class=\"sxs-lookup\"><span data-stu-id=\"b3ad3-156\">Notice that the answer is very close to the minimum (negative) integer.</span></span> <span data-ttu-id=\"b3ad3-157\">Он совпадает со значением `min + 2`.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b3ad3-157\">It's the same as `min + 2`.</span></span> <span data-ttu-id=\"b3ad3-158\">Оператор сложения **вызвал переполнение** допустимых значений для целых чисел.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b3ad3-158\">The addition operation **overflowed** the allowed values for integers.</span></span>\n<span data-ttu-id=\"b3ad3-159\">Ответ является очень большим отрицательным числом, так как переполнение покрывает диапазон от наибольшего целого числа до наименьшего.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b3ad3-159\">The answer is a very large negative number because an overflow \"wraps around\" from the largest possible integer value to the smallest.</span></span>\n\n<span data-ttu-id=\"b3ad3-160\">Существуют другие числовые типы с различными ограничениями и точностью, которые можно использовать, если тип `int` не соответствует вашим требованиям.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b3ad3-160\">There are other numeric types with different limits and precision that you would use when the `int` type doesn't meet your needs.</span></span> <span data-ttu-id=\"b3ad3-161\">Рассмотрим их.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b3ad3-161\">Let's explore those next.</span></span>\n\n> [!NOTE]\n> <span data-ttu-id=\"b3ad3-162\">Этот онлайн-интерфейс для написания кода находится на этапе предварительной версии.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b3ad3-162\">This online coding experience is in preview mode.</span></span> <span data-ttu-id=\"b3ad3-163\">При возникновении проблем сообщите о них на странице [репозитория dotnet/try](https://github.com/dotnet/try/issues).</span><span class=\"sxs-lookup\"><span data-stu-id=\"b3ad3-163\">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>\n"
- title: "<span data-ttu-id=\"b3ad3-164\">Работа с типом double</span><span class=\"sxs-lookup\"><span data-stu-id=\"b3ad3-164\">Work with the double type</span></span>"
  durationInMinutes: 5
  content: "<span data-ttu-id=\"b3ad3-165\">Числовой тип `double` представляет число с плавающей запятой двойной точности.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b3ad3-165\">The `double` numeric type represents a double-precision floating point number.</span></span> <span data-ttu-id=\"b3ad3-166\">Эти термины могут быть новыми для вас.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b3ad3-166\">Those terms may be new to you.</span></span> <span data-ttu-id=\"b3ad3-167\">Число **с плавающей запятой** можно использовать для представления нецелых чисел, которые могут быть очень большими или малыми.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b3ad3-167\">A **floating point** number is useful to represent non-integral numbers that may be very large or small in magnitude.</span></span> <span data-ttu-id=\"b3ad3-168\">**Двойная точность** означает, что для хранения этих чисел используется большая точность, чем **одиночная**.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b3ad3-168\">**Double-precision** means that these numbers are stored using greater precision than **single-precision**.</span></span> <span data-ttu-id=\"b3ad3-169\">На современных компьютерах числа с двойной точностью используется чаще, чем с одиночной.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b3ad3-169\">On modern computers, it is more common to use double precision than single precision numbers.</span></span>\n<span data-ttu-id=\"b3ad3-170\">Рассмотрим их.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b3ad3-170\">Let's explore.</span></span> <span data-ttu-id=\"b3ad3-171\">Запустите следующий код в интерактивном окне и посмотрите на результат:</span><span class=\"sxs-lookup\"><span data-stu-id=\"b3ad3-171\">Try the following code in the interactive window and see the result:</span></span>\n\n```csharp\ndouble a = 5;\ndouble b = 4;\ndouble c = 2;\ndouble d = (a  + b) / c;\nConsole.WriteLine(d);\n```\n\n<span data-ttu-id=\"b3ad3-172\">Обратите внимание, что ответ включает десятичную долю частного.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b3ad3-172\">Notice that the answer includes the decimal portion of the quotient.</span></span> <span data-ttu-id=\"b3ad3-173\">Попробуйте более сложное выражение с типом double:</span><span class=\"sxs-lookup\"><span data-stu-id=\"b3ad3-173\">Try a slightly more complicated expression with doubles:</span></span>\n\n```csharp\ndouble a = 19;\ndouble b = 23;\ndouble c = 8;\ndouble d = (a  + b) / c;\nConsole.WriteLine(d);\n```\n\n<span data-ttu-id=\"b3ad3-174\">Диапазон значений типа double гораздо больше, чем диапазон значений целых чисел.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b3ad3-174\">The range of a double value is much greater than integer values.</span></span> <span data-ttu-id=\"b3ad3-175\">Запустите этот код в интерактивном окне:</span><span class=\"sxs-lookup\"><span data-stu-id=\"b3ad3-175\">Try the following code in the interactive window:</span></span>\n\n```csharp\ndouble max = double.MaxValue;\ndouble min = double.MinValue;\nConsole.WriteLine($\"The range of double is {min} to {max}\");\n```\n\n<span data-ttu-id=\"b3ad3-176\">Значения выводятся в экспоненциальном представлении.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b3ad3-176\">These values are printed out in scientific notation.</span></span> <span data-ttu-id=\"b3ad3-177\">Число слева от символа `E` является значащим.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b3ad3-177\">The number to the left of the `E` is the significand.</span></span> <span data-ttu-id=\"b3ad3-178\">Число справа — это показатель степени, который равен 10.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b3ad3-178\">The number to the right is the exponent, as a power of 10.</span></span> \n\n<span data-ttu-id=\"b3ad3-179\">Так же, как десятичные числа в математике, значения double в C# могут содержать ошибки округления.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b3ad3-179\">Just like decimal numbers in math, doubles in C# can have rounding errors.</span></span> <span data-ttu-id=\"b3ad3-180\">Выполните этот код:</span><span class=\"sxs-lookup\"><span data-stu-id=\"b3ad3-180\">Try this code:</span></span>\n\n```csharp\ndouble third = 1.0 / 3.0;\nConsole.WriteLine(third);\n```\n\n<span data-ttu-id=\"b3ad3-181\">Вы знаете, что периодическая десятичная дробь `0.3` не равняется `1/3`.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b3ad3-181\">You know that `0.3` repeating is not exactly the same as `1/3`.</span></span>\n\n<span data-ttu-id=\"b3ad3-182\">***Задача***</span><span class=\"sxs-lookup\"><span data-stu-id=\"b3ad3-182\">***Challenge***</span></span>\n\n<span data-ttu-id=\"b3ad3-183\">Выполните другие вычисления с большими числами, малыми числами, умножением и делением с помощью типа `double`.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b3ad3-183\">Try other calculations with large numbers, small numbers, multiplication and division using the `double` type.</span></span>  <span data-ttu-id=\"b3ad3-184\">Попробуйте выполнить более сложные вычисления.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b3ad3-184\">Try more complicated calculations.</span></span>\n\n> [!NOTE]\n> <span data-ttu-id=\"b3ad3-185\">Этот онлайн-интерфейс для написания кода находится на этапе предварительной версии.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b3ad3-185\">This online coding experience is in preview mode.</span></span> <span data-ttu-id=\"b3ad3-186\">При возникновении проблем сообщите о них на странице [репозитория dotnet/try](https://github.com/dotnet/try/issues).</span><span class=\"sxs-lookup\"><span data-stu-id=\"b3ad3-186\">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>\n"
- title: "<span data-ttu-id=\"b3ad3-187\">Работа с типами с фиксированной запятой</span><span class=\"sxs-lookup\"><span data-stu-id=\"b3ad3-187\">Work with fixed point types</span></span>"
  durationInMinutes: 8
  content: "<span data-ttu-id=\"b3ad3-188\">Вы уже ознакомились с базовыми числовыми типами в C# — целыми числами и числами типа double.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b3ad3-188\">You've seen the basic numeric types in C#: integers and doubles.</span></span>  <span data-ttu-id=\"b3ad3-189\">Осталось изучить еще один тип: `decimal`.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b3ad3-189\">There is one other type to learn: the `decimal` type.</span></span> <span data-ttu-id=\"b3ad3-190\">Тип `decimal` имеет меньший диапазон, но большую точность, чем `double`.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b3ad3-190\">The `decimal` type has a smaller range but greater precision than `double`.</span></span> <span data-ttu-id=\"b3ad3-191\">Термин **фиксированная запятая** означает, что десятичный (или двоичный) разделитель не перемещается.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b3ad3-191\">The term **fixed point** means that the decimal point (or binary point) doesn't move.</span></span> <span data-ttu-id=\"b3ad3-192\">Например:</span><span class=\"sxs-lookup\"><span data-stu-id=\"b3ad3-192\">Let's take a look:</span></span>\n\n```csharp\ndecimal min = decimal.MinValue;\ndecimal max = decimal.MaxValue;\nConsole.WriteLine($\"The range of the decimal type is {min} to {max}\");\n```\n\n<span data-ttu-id=\"b3ad3-193\">Обратите внимание, что диапазон меньше, чем для типа `double`.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b3ad3-193\">Notice that the range is smaller than the `double` type.</span></span> <span data-ttu-id=\"b3ad3-194\">Вы можете убедиться в повышении точности при использовании типа decimal, выполнив следующий код:</span><span class=\"sxs-lookup\"><span data-stu-id=\"b3ad3-194\">You can see the greater precision with the decimal type by trying the following code:</span></span>\n\n```csharp\ndouble a = 1.0;\ndouble b = 3.0;\nConsole.WriteLine(a / b);\n\ndecimal c = 1.0M;\ndecimal d = 3.0M;\nConsole.WriteLine(c / d);\n```\n\n<span data-ttu-id=\"b3ad3-195\">Суффикс `M` возле чисел указывает, что для константы должен использоваться тип `decimal`.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b3ad3-195\">The `M` suffix on the numbers is how you indicate that a constant should use the `decimal` type.</span></span>\n\n<span data-ttu-id=\"b3ad3-196\">Обратите внимание, что при вычислении с использованием типа decimal справа от запятой содержится больше цифр.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b3ad3-196\">Notice that the math using the decimal type has more digits to the right of the decimal point.</span></span> \n\n<span data-ttu-id=\"b3ad3-197\">***Задача***</span><span class=\"sxs-lookup\"><span data-stu-id=\"b3ad3-197\">***Challenge***</span></span>\n\n<span data-ttu-id=\"b3ad3-198\">Теперь, когда вы ознакомились с разными числовыми типами, напишите код, который позволяет вычислить площадь круга с радиусом 6,35 см.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b3ad3-198\">Now that you've seen the different numeric types, write code that calculates the area of a circle whose radius is 2.50 inches.</span></span> <span data-ttu-id=\"b3ad3-199\">Помните, что площадь круга равна квадрату радиуса, умноженному на число пи.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b3ad3-199\">Remember that the area of a circle is the radius squared multiplied by PI.</span></span> <span data-ttu-id=\"b3ad3-200\">Подсказка: в .NET есть константа пи <xref:System.Math.PI?displayProperty=nameWithType>, которую можно использовать.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b3ad3-200\">One hint: .NET contains a constant for PI, <xref:System.Math.PI?displayProperty=nameWithType> that you can use for that value.</span></span> \n\n> [!NOTE]\n> <span data-ttu-id=\"b3ad3-201\">Этот онлайн-интерфейс для написания кода находится на этапе предварительной версии.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b3ad3-201\">This online coding experience is in preview mode.</span></span> <span data-ttu-id=\"b3ad3-202\">При возникновении проблем сообщите о них на странице [репозитория dotnet/try](https://github.com/dotnet/try/issues).</span><span class=\"sxs-lookup\"><span data-stu-id=\"b3ad3-202\">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>\n\n<span data-ttu-id=\"b3ad3-203\">Вы должны получить ответ от 19 до 20.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b3ad3-203\">You should get an answer between 19 and 20.</span></span>\n"
- title: "<span data-ttu-id=\"b3ad3-204\">Выполнение задачи</span><span class=\"sxs-lookup\"><span data-stu-id=\"b3ad3-204\">Complete challenge</span></span>"
  durationInMinutes: 1
  content: "<span data-ttu-id=\"b3ad3-205\">В результате получилось нечто подобное?</span><span class=\"sxs-lookup\"><span data-stu-id=\"b3ad3-205\">Did you come up with something like this?</span></span>\n\n```csharp\ndouble radius = 2.50;\ndouble area = Math.PI * radius * radius;\nConsole.WriteLine(area);\n```\n\n<span data-ttu-id=\"b3ad3-206\">При желании поэкспериментируйте с другими формулами.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b3ad3-206\">Try some other formulas if you'd like.</span></span>\n\n> [!NOTE]\n> <span data-ttu-id=\"b3ad3-207\">Этот онлайн-интерфейс для написания кода находится на этапе предварительной версии.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b3ad3-207\">This online coding experience is in preview mode.</span></span> <span data-ttu-id=\"b3ad3-208\">При возникновении проблем сообщите о них на странице [репозитория dotnet/try](https://github.com/dotnet/try/issues).</span><span class=\"sxs-lookup\"><span data-stu-id=\"b3ad3-208\">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>\n"
- content: "<span data-ttu-id=\"b3ad3-209\">Вы выполнили задачи краткого руководства \"Числа в C#\".</span><span class=\"sxs-lookup\"><span data-stu-id=\"b3ad3-209\">You've completed the \"Numbers in C#\" quick start.</span></span> \n\n<span data-ttu-id=\"b3ad3-210\">Можно продолжить работу с этими краткими руководствами в собственной среде разработки.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b3ad3-210\">You can continue these quick starts on your own development environment.</span></span> <span data-ttu-id=\"b3ad3-211\">Вы можете познакомиться с основами [локальной разработки](local-environment.md), а затем выбрать краткое руководство.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b3ad3-211\">Learn the basics of [local development](local-environment.md) and then pick a quick start.</span></span> <span data-ttu-id=\"b3ad3-212\">Вы можете попробовать выполнить это упражнение, перейти сразу к следующему краткому руководству или начать заново проходить краткое руководство по [числам в C#](numbers-in-csharp-local.md).</span><span class=\"sxs-lookup\"><span data-stu-id=\"b3ad3-212\">You can try this same exercise, move directly to the next quick start, or start again at with the [numbers in C#](numbers-in-csharp-local.md) quickstart.</span></span>\n\n<span data-ttu-id=\"b3ad3-213\">Дополнительные сведения о числах в C# см. в следующих статьях:</span><span class=\"sxs-lookup\"><span data-stu-id=\"b3ad3-213\">You can learn more about numbers in C# in the following topics:</span></span>\n\n<span data-ttu-id=\"b3ad3-214\">[Таблица целых типов](../language-reference/keywords/integral-types-table.md) </span><span class=\"sxs-lookup\"><span data-stu-id=\"b3ad3-214\">[Integral Types Table](../language-reference/keywords/integral-types-table.md) </span></span>  \n<span data-ttu-id=\"b3ad3-215\">[Таблица типов с плавающей запятой](../language-reference/keywords/floating-point-types-table.md) </span><span class=\"sxs-lookup\"><span data-stu-id=\"b3ad3-215\">[Floating-Point Types Table](../language-reference/keywords/floating-point-types-table.md) </span></span>  \n<span data-ttu-id=\"b3ad3-216\">[Таблица встроенных типов](../language-reference/keywords/built-in-types-table.md) </span><span class=\"sxs-lookup\"><span data-stu-id=\"b3ad3-216\">[Built-In Types Table](../language-reference/keywords/built-in-types-table.md) </span></span>  \n<span data-ttu-id=\"b3ad3-217\">[Таблица неявных числовых преобразований](../language-reference/keywords/implicit-numeric-conversions-table.md) </span><span class=\"sxs-lookup\"><span data-stu-id=\"b3ad3-217\">[Implicit Numeric Conversions Table](../language-reference/keywords/implicit-numeric-conversions-table.md) </span></span>  \n[<span data-ttu-id=\"b3ad3-218\">Таблица явных числовых преобразований</span><span class=\"sxs-lookup\"><span data-stu-id=\"b3ad3-218\">Explicit Numeric Conversions Table</span></span>](../language-reference/keywords/explicit-numeric-conversions-table.md)\0"
